
[symlist]
COMMENT = 
CPU_NUMBER = 1
DB_HINT_FOR_PROCESSING_HOST = 
END = 20210527170000000
end_expression = NOW()
graph_reuse = 0
NESTED_OTQS_USE_ONLY_SINKS_FOR_OUTPUT = TRUE
one_to_many_symbol_mapping = 0
QUERY_BATCH_SIZE = 0
ROOT = FIND_DB_SYMBOLS(PATTERN="%")
ROOT_EP_PARAMETERS_FLAG = -2
ROOT_TICK_TYPE = SYM
ROOT_X = 1104
ROOT_Y = 132
SECURITY = S_ORDERS:: 0
SHOW_TEMPLATE = 
START = 20210527080000000
start_expression = TODAY()
TYPE = GRAPH

[symlist_for_primary]
COMMENT = 
CPU_NUMBER = 1
DB_HINT_FOR_PROCESSING_HOST = 
END = 20210527170000000
end_expression = NOW()
graph_reuse = 0
NESTED_OTQS_USE_ONLY_SINKS_FOR_OUTPUT = TRUE
NODE_4 = CSV_FILE_LISTING(FIELD_DELIMITERS="\"\\t\"",QUOTE_CHARS="\"\"",FILE_NAME_REGEX="europe_sym_list.txt",USE_FIELD_DELIMITERS_FOR_TITLE=true,FIRST_LINE_IS_TITLE=true)
NODE_4_EP_PARAMETERS_FLAG = -2
NODE_4_TICK_TYPE = CSV
NODE_4_X = 1534
NODE_4_Y = 448
NODE_8 = WHERE_CLAUSE(WHERE="SYM = \"$SYM\" OR \"ALL\" = \"$SYM\"")
NODE_8_EP_PARAMETERS_FLAG = -2
NODE_8_SOURCE =  NODE_4
NODE_8_X = 1693
NODE_8_Y = 1083
one_to_many_symbol_mapping = 0
PARAMETER = SYM HSBA/L
QUERY_BATCH_SIZE = 0
ROOT = UPDATE_FIELD(FIELD=SYMBOL_NAME,VALUE="TOKEN(SYMBOL_NAME,-1,\":\")")
ROOT_EP_PARAMETERS_FLAG = -2
ROOT_SOURCE =  NODE_8..IF
ROOT_X = 860
ROOT_Y = 921
SECURITY = S_ORDERS:: 0
SHOW_TEMPLATE = 
START = 20210527080000000
start_expression = TODAY()
TYPE = GRAPH

[primary_symlist]
COMMENT = 
CPU_NUMBER = 1
DB_HINT_FOR_PROCESSING_HOST = 
END = 20210527170000000
end_expression = NOW()
graph_reuse = 0
NESTED_OTQS_USE_ONLY_SINKS_FOR_OUTPUT = TRUE
NODE_3 = CSV_FILE_LISTING(FIELD_DELIMITERS="\"\\t\"",QUOTE_CHARS="\"\"",FILE_NAME_REGEX="europe_sym_list.txt",USE_FIELD_DELIMITERS_FOR_TITLE=true,FIRST_LINE_IS_TITLE=true)
NODE_3_EP_PARAMETERS_FLAG = -2
NODE_3_TICK_TYPE = CSV
NODE_3_X = 1385
NODE_3_Y = 101
one_to_many_symbol_mapping = 0
QUERY_BATCH_SIZE = 0
ROOT = DISTINCT(KEYS=SYM)
ROOT_EP_PARAMETERS_FLAG = -2
ROOT_SOURCE =  NODE_3
ROOT_X = 360
ROOT_Y = 514
SECURITY = S_ORDERS:: 0
SHOW_TEMPLATE = 
START = 20210527080000000
start_expression = TODAY()
TYPE = GRAPH

[ordmsgs]
COMMENT = 
CPU_NUMBER = 1
DB_HINT_FOR_PROCESSING_HOST = 
END = 20210527170000000
end_expression = NOW()
graph_reuse = 0
NESTED_OTQS_USE_ONLY_SINKS_FOR_OUTPUT = TRUE
NODE_2 = PASSTHROUGH
NODE_2_EP_PARAMETERS_FLAG = -2
NODE_2_NAME = ord
NODE_2_TICK_TYPE = ORD
NODE_2_X = 1050.333
NODE_2_Y = 557.500
one_to_many_symbol_mapping = 0
QUERY_BATCH_SIZE = 0
ROOT = MERGE
ROOT_BIND_SECURITY = eval(THIS::symlist) 0
ROOT_EP_PARAMETERS_FLAG = -2
ROOT_SOURCE =  NODE_2
ROOT_X = 1050.333
ROOT_Y = 804.167
SHOW_TEMPLATE = 
START = 20210527080000000
start_expression = TODAY()
TYPE = GRAPH

[ord_latest]
COMMENT = 
CPU_NUMBER = 1
DB_HINT_FOR_PROCESSING_HOST = 
END = 20210527170000000
end_expression = NOW()
graph_reuse = 0
NESTED_OTQS_USE_ONLY_SINKS_FOR_OUTPUT = TRUE
NODE_11 = MERGE(IDENTIFY_INPUT_TS=false)
NODE_11_BIND_SECURITY = eval(THIS::symlist) 0
NODE_11_EP_PARAMETERS_FLAG = -2
NODE_11_NAME = ord_state
NODE_11_SOURCE =  NODE_7
NODE_11_X = 1048.833
NODE_11_Y = 1246
NODE_2 = PASSTHROUGH
NODE_23 = CSV_FILE_LISTING(TIME_ASSIGNMENT=_START_TIME,FIELD_DELIMITERS="\",\"",FILE_CONTENTS="CCY,double USD_XRATE\
DKK,0.16\
EUR,1.19\
GBP,1.40\
NOK,0.12\
SEK,0.12\
USD,1.0",USE_FIELD_DELIMITERS_FOR_TITLE=true,FIRST_LINE_IS_TITLE=true)
NODE_23_BIND_SECURITY = LOCAL:: 0
NODE_23_EP_PARAMETERS_FLAG = -2
NODE_23_NAME = xrates
NODE_23_X = 1662.167
NODE_23_Y = 1526
NODE_24 = TABLE(FIELDS=CCY,KEEP_INPUT_FIELDS=true)
NODE_24_EP_PARAMETERS_FLAG = -2
NODE_24_NAME = ord_state
NODE_24_SOURCE =  NODE_11
NODE_24_X = 1048.833
NODE_24_Y = 1526
NODE_27 = JOIN_BY_TIME(LEADING_SOURCES=ord_state,JOIN_KEYS=CCY,SAME_TIMESTAMP_JOIN_POLICY=EACH_FOR_LEADER_WITH_FIRST,ADD_SOURCE_PREFIX=false)
NODE_27_EP_PARAMETERS_FLAG = -2
NODE_27_SOURCE =  NODE_24 NODE_23
NODE_27_X = 1352.833
NODE_27_Y = 1772.667
NODE_2_EP_PARAMETERS_FLAG = -2
NODE_2_NAME = ord
NODE_2_TICK_TYPE = ORD
NODE_2_X = 1048.833
NODE_2_Y = 126
NODE_32 = ADD_FIELDS(FIELDS="ORDER_VALUE_USD double = ORDER_VALUE * USD_XRATE,\
CUM_VALUE_USD double = CUM_VALUE * USD_XRATE")
NODE_32_EP_PARAMETERS_FLAG = -2
NODE_32_NAME = order_value_usd
NODE_32_SOURCE =  NODE_35
NODE_32_X = 1352.833
NODE_32_Y = 2232.667
NODE_34 = ADD_FIELD(FIELD="PCNT_FILLED double",VALUE="CUM_SIZE / ORDER_SIZE")
NODE_34_EP_PARAMETERS_FLAG = -2
NODE_34_NAME = pcnt_filled
NODE_34_SOURCE =  NODE_32
NODE_34_X = 1352.833
NODE_34_Y = 2512.667
NODE_35 = PASSTHROUGH(FIELDS="ord_state.TIMESTAMP,xrates.TIMESTAMP",DROP_FIELDS=true)
NODE_35_EP_PARAMETERS_FLAG = -2
NODE_35_SOURCE =  NODE_27
NODE_35_X = 1352.833
NODE_35_Y = 1986
NODE_37 = ADD_FIELD(FIELD="ORDER_DURATION_MSEC long",VALUE="DATEDIFF(\"MILLISECOND\",ARRIVAL_TIME,LAST_UPDATED)")
NODE_37_EP_PARAMETERS_FLAG = -2
NODE_37_NAME = order_duration
NODE_37_SOURCE =  NODE_34
NODE_37_X = 1352.833
NODE_37_Y = 2792.667
NODE_39 = WHERE_CLAUSE(WHERE="CUM_SIZE > 0")
NODE_39_EP_PARAMETERS_FLAG = -2
NODE_39_SOURCE =  NODE_37
NODE_39_X = 1355.500
NODE_39_Y = 3039.333
NODE_7 = COMPUTE(COMPUTE="LAST(INPUT_FIELD_NAME=\"SEQ_ID\") SEQ_ID,\
LAST(INPUT_FIELD_NAME=\"EXEC_PRICE\") EXEC_PRICE,\
LAST(INPUT_FIELD_NAME=\"LIMIT_PRICE\") LIMIT_PRICE,\
LAST(INPUT_FIELD_NAME=\"FILL_SIZE\") FILL_SIZE,\
LAST(INPUT_FIELD_NAME=\"FILL_VALUE\") FILL_VALUE,\
HIGH(INPUT_FIELD_NAME=\"ORDER_VALUE\") ORDER_VALUE,\
SUM(INPUT_FIELD_NAME=\"FILL_SIZE\") CUM_SIZE,\
SUM(INPUT_FIELD_NAME=\"FILL_VALUE\") CUM_VALUE,\
LAST(INPUT_FIELD_NAME=\"CCYMULTIPLIER\") CCYMULTIPLIER,\
HIGH(INPUT_FIELD_NAME=\"SIZE\") ORDER_SIZE,\
LAST(INPUT_FIELD_NAME=\"ORDSTATUS\") ORDSTATUS,\
LAST(INPUT_FIELD_NAME=\"ORDSTYLE\") ORDSTYLE,\
LAST(INPUT_FIELD_NAME=\"SIDE\") SIDE,\
LAST(INPUT_FIELD_NAME=\"ALGO\") ALGO,\
LAST(INPUT_FIELD_NAME=\"ISIN\") ISIN,\
LAST(INPUT_FIELD_NAME=\"MIC\") MIC,\
LAST(INPUT_FIELD_NAME=\"VENUE\") VENUE,\
LAST(INPUT_FIELD_NAME=\"SYM\") SYM,\
LAST(INPUT_FIELD_NAME=\"CCY\") CCY,\
LAST_TIME LAST_UPDATED,\
FIRST_TIME ARRIVAL_TIME,\
NUM_TICKS() MSG_COUNT",GROUP_BY=ORDER_ID,APPEND_OUTPUT_FIELD_NAME=false)
NODE_7_EP_PARAMETERS_FLAG = -2
NODE_7_NAME = get_state
NODE_7_SOURCE =  NODE_9
NODE_7_X = 1048.833
NODE_7_Y = 966
NODE_8 = ADD_FIELD(FIELD=FILL_VALUE,VALUE="FILL_SIZE * EXEC_PRICE * CCYMULTIPLIER")
NODE_8_EP_PARAMETERS_FLAG = -2
NODE_8_NAME = add_fill_value
NODE_8_SOURCE =  NODE_2
NODE_8_X = 1048.833
NODE_8_Y = 406
NODE_9 = ADD_FIELD(FIELD=ORDER_VALUE,VALUE="SIZE * LIMIT_PRICE * CCYMULTIPLIER")
NODE_9_EP_PARAMETERS_FLAG = -2
NODE_9_NAME = add_fill_value
NODE_9_SOURCE =  NODE_8
NODE_9_X = 1048.833
NODE_9_Y = 686
one_to_many_symbol_mapping = 0
QUERY_BATCH_SIZE = 0
ROOT = WHERE_CLAUSE(WHERE="ORDER_DURATION_MSEC > 0")
ROOT_EP_PARAMETERS_FLAG = -2
ROOT_SOURCE =  NODE_39..IF
ROOT_X = 1355.500
ROOT_Y = 3252.667
SHOW_TEMPLATE = 
START = 20210527080000000
start_expression = TODAY()
TYPE = GRAPH

[mktdata_qte]
COMMENT = 
CPU_NUMBER = 1
DB_HINT_FOR_PROCESSING_HOST = 
END = 20210626000000000
end_expression = NOW()
graph_reuse = 0
NESTED_OTQS_USE_ONLY_SINKS_FOR_OUTPUT = TRUE
NODE_1 = PASSTHROUGH
NODE_11 = MERGE
NODE_11_BIND_SECURITY = eval(THIS::symlist_for_primary,"SYM=expr(_SYMBOL_NAME)") 0
NODE_11_EP_PARAMETERS_FLAG = -2
NODE_11_NAME = merge_across_venues_for_primary
NODE_11_SOURCE =  NODE_8
NODE_11_X = 1525
NODE_11_Y = 850.667
NODE_13 = OB_SNAPSHOT_WIDE(IS_RUNNING_AGGR=true,MAX_LEVELS=1)
NODE_13_EP_PARAMETERS_FLAG = -2
NODE_13_NAME = consolidated_tob
NODE_13_SOURCE =  NODE_11
NODE_13_X = 1525
NODE_13_Y = 1130.667
NODE_16 = PASSTHROUGH(FIELDS="BID_PRICE,ASK_PRICE")
NODE_16_EP_PARAMETERS_FLAG = -2
NODE_16_NAME = tob
NODE_16_SOURCE =  NODE_13
NODE_16_X = 1525
NODE_16_Y = 1410.667
NODE_1_EP_PARAMETERS_FLAG = -2
NODE_1_TICK_TYPE = MKTDATA::QTE
NODE_1_X = 1525
NODE_1_Y = 110.667
NODE_5 = ADD_FIELDS(FIELDS="BID_SIZE int = 1, ASK_SIZE int = 1")
NODE_5_EP_PARAMETERS_FLAG = -2
NODE_5_NAME = fake_size
NODE_5_SOURCE =  NODE_1
NODE_5_X = 1525
NODE_5_Y = 357.333
NODE_8 = VIRTUAL_OB
NODE_8_EP_PARAMETERS_FLAG = -2
NODE_8_SOURCE =  NODE_5
NODE_8_X = 1525
NODE_8_Y = 604
one_to_many_symbol_mapping = 0
QUERY_BATCH_SIZE = 0
ROOT = MERGE
ROOT_BIND_SECURITY = eval(THIS::primary_symlist) 0
ROOT_COMMENTED_OUT = 1
ROOT_EP_PARAMETERS_FLAG = -2
ROOT_SOURCE =  NODE_16
ROOT_X = 1525
ROOT_Y = 1657.333
SECURITY = eval(THIS::primary_symlist) 0 No
SECURITY = HSBA/L 0
SHOW_TEMPLATE = 
START = 20210625000000000
start_expression = TODAY()
TYPE = GRAPH

[mktdata_trd]
COMMENT = 
CPU_NUMBER = 1
DB_HINT_FOR_PROCESSING_HOST = 
END = 20210626000000000
end_expression = NOW()
graph_reuse = 0
NESTED_OTQS_USE_ONLY_SINKS_FOR_OUTPUT = TRUE
NODE_1 = PASSTHROUGH
NODE_11 = MERGE
NODE_11_BIND_SECURITY = eval(THIS::symlist_for_primary,"SYM=expr(_SYMBOL_NAME)") 0
NODE_11_EP_PARAMETERS_FLAG = -2
NODE_11_NAME = merge_across_venues_for_primary
NODE_11_SOURCE =  NODE_5
NODE_11_X = 1180.333
NODE_11_Y = 750.333
NODE_17 = COMPUTE(COMPUTE="LAST(INPUT_FIELD_NAME=\"PRICE\") MKT_LAST_PRICE,\
LAST(INPUT_FIELD_NAME=\"SIZE\") MKT_LAST_SIZE,\
LAST(INPUT_FIELD_NAME=\"VALUE\") MKT_LAST_VALUE,\
SUM(INPUT_FIELD_NAME=\"SIZE\") MKT_ACC_SIZE,\
SUM(INPUT_FIELD_NAME=\"VALUE\") MKT_ACC_VALUE",IS_RUNNING_AGGR=true,APPEND_OUTPUT_FIELD_NAME=false)
NODE_17_EP_PARAMETERS_FLAG = -2
NODE_17_NAME = acc_size
NODE_17_SOURCE =  NODE_11
NODE_17_X = 1180.333
NODE_17_Y = 1022
NODE_1_EP_PARAMETERS_FLAG = -2
NODE_1_TICK_TYPE = MKTDATA::TRD
NODE_1_X = 1183
NODE_1_Y = 101
NODE_5 = ADD_FIELDS(FIELDS="VALUE double = PRICE * SIZE")
NODE_5_EP_PARAMETERS_FLAG = -2
NODE_5_NAME = value
NODE_5_SOURCE =  NODE_1
NODE_5_X = 1180.333
NODE_5_Y = 409
one_to_many_symbol_mapping = 0
QUERY_BATCH_SIZE = 0
ROOT = MERGE
ROOT_BIND_SECURITY = eval(THIS::primary_symlist) 0
ROOT_COMMENTED_OUT = 1
ROOT_EP_PARAMETERS_FLAG = -2
ROOT_SOURCE =  NODE_17
ROOT_X = 1180.333
ROOT_Y = 1260.333
SECURITY = eval(THIS::primary_symlist) 0 No
SECURITY = HSBA/L 0
SHOW_TEMPLATE = 
START = 20210625000000000
start_expression = TODAY()
TYPE = GRAPH

[ord]
COMMENT = 
CPU_NUMBER = 1
DB_HINT_FOR_PROCESSING_HOST = 
END = 20210626000000000
end_expression = NOW()
graph_reuse = 0
NESTED_OTQS_USE_ONLY_SINKS_FOR_OUTPUT = TRUE
NODE_11 = MERGE
NODE_11_BIND_SECURITY = eval(THIS::symlist_for_primary,"SYM=expr(_SYMBOL_NAME)") 0
NODE_11_EP_PARAMETERS_FLAG = -2
NODE_11_NAME = merge_across_venues_for_primary
NODE_11_SOURCE =  NODE_17
NODE_11_X = 1527
NODE_11_Y = 805
NODE_17 = PASSTHROUGH
NODE_17_EP_PARAMETERS_FLAG = -2
NODE_17_NAME = ord
NODE_17_TICK_TYPE = S_ORDERS::ORD
NODE_17_X = 932
NODE_17_Y = 326
NODE_20 = MERGE
NODE_20_BIND_SECURITY = eval(THIS::primary_symlist) 0
NODE_20_COMMENTED_OUT = 1
NODE_20_EP_PARAMETERS_FLAG = -2
NODE_20_SOURCE =  NODE_11
NODE_20_X = 1525
NODE_20_Y = 2305.667
one_to_many_symbol_mapping = 0
QUERY_BATCH_SIZE = 0
ROOT = VALUE_PRESENT(FIELD=ORDER_ID,VALUES="\"A154412690102517124\"")
ROOT_EP_PARAMETERS_FLAG = -2
ROOT_SOURCE =  NODE_20
ROOT_X = 1838
ROOT_Y = 1900
SECURITY = eval(THIS::primary_symlist) 0 No
SECURITY = DGE/L 0
SHOW_TEMPLATE = 
START = 20210625000000000
start_expression = TODAY()
TYPE = GRAPH

[ord_with_mkt]
COMMENT = 
CPU_NUMBER = 1
DB_HINT_FOR_PROCESSING_HOST = 
END = 20210626000000000
end_expression = NOW()
graph_reuse = 0
NESTED_OTQS_USE_ONLY_SINKS_FOR_OUTPUT = TRUE
NODE_17 = PASSTHROUGH
NODE_17_EP_PARAMETERS_FLAG = -2
NODE_17_NAME = ord
NODE_17_TICK_TYPE = S_ORDERS::ORD
NODE_17_X = 1845
NODE_17_Y = 637.333
NODE_20 = PASSTHROUGH(FIELDS="BID_PRICE,ASK_PRICE")
NODE_20_EP_PARAMETERS_FLAG = -2
NODE_20_NAME = ebbo
NODE_20_SOURCE =  NODE_21
NODE_20_X = 1199.667
NODE_20_Y = 1197.333
NODE_21 = OB_SNAPSHOT_WIDE(IS_RUNNING_AGGR=true,MAX_LEVELS=1)
NODE_21_EP_PARAMETERS_FLAG = -2
NODE_21_NAME = consolidated_tob
NODE_21_SOURCE =  NODE_22
NODE_21_X = 1181
NODE_21_Y = 917.333
NODE_22 = MERGE(IDENTIFY_INPUT_TS=false)
NODE_22_BIND_SECURITY = eval(THIS::symlist_for_primary,"SYM=expr(_SYMBOL_NAME)") 0
NODE_22_EP_PARAMETERS_FLAG = -2
NODE_22_NAME = merge_across_venues_for_primary
NODE_22_SOURCE =  NODE_23
NODE_22_X = 1173
NODE_22_Y = 637.333
NODE_23 = VIRTUAL_OB
NODE_23_EP_PARAMETERS_FLAG = -2
NODE_23_SOURCE =  NODE_51
NODE_23_X = 1173
NODE_23_Y = 390.667
NODE_27 = MERGE(IDENTIFY_INPUT_TS=false)
NODE_27_BIND_SECURITY = eval(THIS::symlist_for_primary,"SYM=expr(_SYMBOL_NAME)") 0
NODE_27_EP_PARAMETERS_FLAG = -2
NODE_27_NAME = merge_across_venues_for_primary
NODE_27_SOURCE =  NODE_17
NODE_27_X = 1837
NODE_27_Y = 917.333
NODE_30 = PASSTHROUGH
NODE_30_EP_PARAMETERS_FLAG = -2
NODE_30_NAME = ord
NODE_30_SOURCE =  NODE_27
NODE_30_X = 1826.333
NODE_30_Y = 1197.333
NODE_34 = JOIN_BY_TIME(LEADING_SOURCES=ord,SAME_TIMESTAMP_JOIN_POLICY=EACH_FOR_LEADER_WITH_FIRST,ADD_SOURCE_PREFIX=false)
NODE_34_EP_PARAMETERS_FLAG = -2
NODE_34_NAME = ord_to_tob
NODE_34_SOURCE =  NODE_20 NODE_30
NODE_34_X = 1511.667
NODE_34_Y = 1477.333
NODE_37 = PASSTHROUGH(FIELDS="ebbo.TIMESTAMP,ord.TIMESTAMP",DROP_FIELDS=true)
NODE_37_EP_PARAMETERS_FLAG = -2
NODE_37_NAME = drop_ts
NODE_37_SOURCE =  NODE_34
NODE_37_X = 1511.667
NODE_37_Y = 1757.333
NODE_39 = DECLARE_STATE_VARIABLES(VARIABLES="TICK_SET_UNORDERED(LATEST_TICK,100,ORDER_ID) ORDERS")
NODE_39_EP_PARAMETERS_FLAG = -2
NODE_39_NAME = declare_orders_state
NODE_39_SOURCE =  NODE_59
NODE_39_X = 1511.667
NODE_39_Y = 2317.333
NODE_42 = PER_TICK_SCRIPT(SCRIPT="nsectime ARRIVAL_TIME = 0;\
nsectime COMPLETION_TIME = 0;\
double ARRIVAL_BID = NAN();\
double ARRIVAL_ASK = NAN();\
long MSG_COUNT = 0;\
long REPLACE_COUNT = 0;\
long ORD_SIZE = 0;\
long CUM_SIZE = 0;\
long FILL_COUNT = 0;\
long CANCEL_COUNT = 0;\
long NEW_COUNT = 0;\
double CUM_VALUE = 0.0;\
double AVG_PRICE = NAN();\
long DURATION = 0;\
double DURATION_MILLIS = NAN();\
\
ARRIVAL_TIME = FIND(STATE::ORDERS,\"ARRIVAL_TIME\",0,ORDER_ID);\
COMPLETION_TIME = FIND(STATE::ORDERS,\"COMPLETION_TIME\",0,ORDER_ID);\
\
ARRIVAL_BID = FIND(STATE::ORDERS,\"ARRIVAL_BID\",NAN(),ORDER_ID);\
ARRIVAL_ASK = FIND(STATE::ORDERS,\"ARRIVAL_ASK\",NAN(),ORDER_ID);\
\
MSG_COUNT = FIND(STATE::ORDERS,\"MSG_COUNT\",0,ORDER_ID);\
REPLACE_COUNT = FIND(STATE::ORDERS,\"REPLACE_COUNT\",0,ORDER_ID);\
FILL_COUNT = FIND(STATE::ORDERS,\"FILL_COUNT\",0,ORDER_ID);\
CANCEL_COUNT = FIND(STATE::ORDERS,\"CANCEL_COUNT\",0,ORDER_ID);\
NEW_COUNT = FIND(STATE::ORDERS,\"NEW_COUNT\",0,ORDER_ID);\
\
ORD_SIZE = FIND(STATE::ORDERS,\"ORD_SIZE\",0,ORDER_ID);\
CUM_SIZE = FIND(STATE::ORDERS,\"CUM_SIZE\",0,ORDER_ID);\
CUM_VALUE = FIND(STATE::ORDERS,\"CUM_VALUE\",0.0,ORDER_ID);\
\
MSG_COUNT += 1;\
\
if (ORDSTATUS ==\"NEW\") {\
	ARRIVAL_TIME = (TIMESTAMP);\
	ARRIVAL_BID = BID_PRICE;\
	ARRIVAL_ASK = ASK_PRICE;\
	ORD_SIZE = SIZE;\
	NEW_COUNT += 1;\
}\
else if (ORDSTATUS ==\"REPLACE\") {\
	REPLACE_COUNT += 1;\
	ORD_SIZE = SIZE;\
}\
else if (ORDSTATUS == \"FILL\" ) {\
	CUM_SIZE += FILL_SIZE;\
	CUM_VALUE += EXEC_PRICE * FILL_SIZE;\
	FILL_COUNT += 1;\
	if (CUM_SIZE ==ORD_SIZE) {\
		COMPLETION_TIME = (TIMESTAMP);\
	}	\
}\
else if (ORDSTATUS == \"CANCEL\") {\
	COMPLETION_TIME = (TIMESTAMP);\
	CANCEL_COUNT += 1;\
}\
\
if (CUM_SIZE > 0) {\
	AVG_PRICE = CUM_VALUE / CUM_SIZE;\
}\
\
if (COMPLETION_TIME > 0) {\
	DURATION = NSECTIME_TO_LONG(COMPLETION_TIME) - NSECTIME_TO_LONG(ARRIVAL_TIME);\
	DURATION_MILLIS = DURATION / 1000000;\
}")
NODE_42_EP_PARAMETERS_FLAG = -2
NODE_42_SOURCE =  NODE_39
NODE_42_X = 1511.667
NODE_42_Y = 2564
NODE_46 = PER_TICK_SCRIPT(SCRIPT="double EBBO_MID = (BID_PRICE + ASK_PRICE)/2;\
double QUOTED_SPREAD = ASK_PRICE - BID_PRICE;\
\
double EFFECTIVE_SPREAD = NAN();\
double EFFECTIVE_QUOTED_SPREAD_RATIO = NAN();\
double PRICE_IMPROVED = 0.0;\
double PRICE_IMPROVED_PCNT = 0.0;\
double PRICE_IMPROVED_VALUE = 0.0;\
long AT_OR_BETTER_QTY = 0;\
long AT_OR_BETTER_COUNT = 0;\
\
double CUM_PRICE_IMPROVED_VALUE = 0.0;\
long CUM_AT_OR_BETTER_QTY = 0;\
long CUM_AT_OR_BETTER_COUNT  = 0;\
\
if (FILL_SIZE > 0) {\
	if (SIDE ==\"BUY\") {\
		EFFECTIVE_SPREAD = 2*(EXEC_PRICE - EBBO_MID);\
		PRICE_IMPROVED = ASK_PRICE - EXEC_PRICE;\
		PRICE_IMPROVED_PCNT = PRICE_IMPROVED / ASK_PRICE;\
	}\
	else {\
		EFFECTIVE_SPREAD = 2*(EBBO_MID - EXEC_PRICE);\
		PRICE_IMPROVED = EXEC_PRICE - BID_PRICE;\
		PRICE_IMPROVED_PCNT = PRICE_IMPROVED / BID_PRICE;\
	}\
	PRICE_IMPROVED_VALUE = PRICE_IMPROVED * FILL_SIZE;\
	if (QUOTED_SPREAD > 0) {\
		EFFECTIVE_QUOTED_SPREAD_RATIO = EFFECTIVE_SPREAD/QUOTED_SPREAD;\
	}\
	if(PRICE_IMPROVED >=0) {\
		AT_OR_BETTER_QTY = FILL_SIZE;\
		AT_OR_BETTER_COUNT = 1;\
	}\
}\
\
CUM_PRICE_IMPROVED_VALUE = FIND(STATE::ORDERS,\"CUM_PRICE_IMPROVED_VALUE\",0.0,ORDER_ID);\
CUM_AT_OR_BETTER_QTY = FIND(STATE::ORDERS,\"CUM_AT_OR_BETTER_QTY\",0,ORDER_ID);\
CUM_AT_OR_BETTER_COUNT  = FIND(STATE::ORDERS,\"CUM_AT_OR_BETTER_COUNT\",0,ORDER_ID);\
\
CUM_PRICE_IMPROVED_VALUE += PRICE_IMPROVED_VALUE;\
CUM_AT_OR_BETTER_QTY += AT_OR_BETTER_QTY;\
CUM_AT_OR_BETTER_COUNT  +=  + AT_OR_BETTER_COUNT;")
NODE_46_EP_PARAMETERS_FLAG = -2
NODE_46_NAME = exec_stats
NODE_46_SOURCE =  NODE_42
NODE_46_X = 1511.667
NODE_46_Y = 2810.667
NODE_51 = TABLE(FIELDS="BID_PRICE double, ASK_PRICE double, BID_SIZE int (1), ASK_SIZE int(1)")
NODE_51_EP_PARAMETERS_FLAG = -2
NODE_51_NAME = tob
NODE_51_TICK_TYPE = MKTDATA::QTE
NODE_51_X = 1175.667
NODE_51_Y = 144
NODE_56 = UPDATE_TICK_SETS(TICK_SETS="STATE::ORDERS")
NODE_56_EP_PARAMETERS_FLAG = -2
NODE_56_NAME = ord
NODE_56_SOURCE =  NODE_46
NODE_56_X = 1511.667
NODE_56_Y = 3090.667
NODE_58 = NUM_TICKS
NODE_58_EP_PARAMETERS_FLAG = -2
NODE_58_SOURCE =  NODE_56
NODE_58_X = 1511.667
NODE_58_Y = 3337.333
NODE_59 = TABLE(FIELDS="BID_PRICE double, ASK_PRICE double",KEEP_INPUT_FIELDS=true)
NODE_59_EP_PARAMETERS_FLAG = -2
NODE_59_NAME = force_schema_for_bid_and_ask
NODE_59_SOURCE =  NODE_37
NODE_59_X = 1511.667
NODE_59_Y = 2037.333
NODE_63 = DUMP_TICK_SET(TICK_SET="STATE::ORDERS")
NODE_63_EP_PARAMETERS_FLAG = -2
NODE_63_SOURCE =  NODE_58
NODE_63_X = 1514.333
NODE_63_Y = 3550.667
NODE_65 = MERGE(IDENTIFY_INPUT_TS=false)
NODE_65_BIND_SECURITY = eval(THIS::primary_symlist) 0
NODE_65_EP_PARAMETERS_FLAG = -2
NODE_65_SOURCE =  NODE_63
NODE_65_X = 1511.667
NODE_65_Y = 3764
NODE_67 = PASSTHROUGH
NODE_67_EP_PARAMETERS_FLAG = -2
NODE_67_NAME = output
NODE_67_SOURCE =  NODE_65
NODE_67_X = 1511.667
NODE_67_Y = 4010.667
one_to_many_symbol_mapping = 0
QUERY_BATCH_SIZE = 0
ROOT = TABLE(FIELDS=SYM,KEEP_INPUT_FIELDS=true)
ROOT_EP_PARAMETERS_FLAG = -2
ROOT_SOURCE =  NODE_67
ROOT_X = 1511.667
ROOT_Y = 4257.333
SECURITY = eval(THIS::primary_symlist) 0 No
SECURITY = HSBA/L 0 No
SHOW_TEMPLATE = 
START = 20210625000000000
start_expression = TODAY()
TYPE = GRAPH

[ord_with_book]
COMMENT = 
CPU_NUMBER = 1
DB_HINT_FOR_PROCESSING_HOST = 
END = 20210626000000000
end_expression = NOW()
graph_reuse = 0
NESTED_OTQS_USE_ONLY_SINKS_FOR_OUTPUT = TRUE
NODE_17 = PASSTHROUGH
NODE_17_EP_PARAMETERS_FLAG = -2
NODE_17_NAME = ord
NODE_17_TICK_TYPE = S_ORDERS::ORD
NODE_17_X = 1493
NODE_17_Y = 393.333
NODE_20 = PASSTHROUGH
NODE_20_EP_PARAMETERS_FLAG = -2
NODE_20_NAME = ebbo
NODE_20_SOURCE =  NODE_66
NODE_20_X = 847.667
NODE_20_Y = 585.333
NODE_27 = MERGE(IDENTIFY_INPUT_TS=false)
NODE_27_BIND_SECURITY = eval(THIS::symlist_for_primary,"SYM=expr(_SYMBOL_NAME)") 0
NODE_27_EP_PARAMETERS_FLAG = -2
NODE_27_NAME = merge_across_venues_for_primary
NODE_27_SOURCE =  NODE_17
NODE_27_X = 1485
NODE_27_Y = 673.333
NODE_30 = PASSTHROUGH
NODE_30_EP_PARAMETERS_FLAG = -2
NODE_30_NAME = ord
NODE_30_SOURCE =  NODE_27
NODE_30_X = 1455.667
NODE_30_Y = 953.333
NODE_34 = JOIN_BY_TIME(LEADING_SOURCES=ord,SAME_TIMESTAMP_JOIN_POLICY=EACH_FOR_LEADER_WITH_FIRST,ADD_SOURCE_PREFIX=false)
NODE_34_EP_PARAMETERS_FLAG = -2
NODE_34_NAME = ord_to_tob
NODE_34_SOURCE =  NODE_20 NODE_30
NODE_34_X = 1159.667
NODE_34_Y = 1563.333
NODE_37 = PASSTHROUGH(FIELDS="ebbo.TIMESTAMP,ord.TIMESTAMP",DROP_FIELDS=true)
NODE_37_EP_PARAMETERS_FLAG = -2
NODE_37_NAME = drop_ts
NODE_37_SOURCE =  NODE_34
NODE_37_X = 1159.667
NODE_37_Y = 1755.333
NODE_39 = DECLARE_STATE_VARIABLES(VARIABLES="TICK_SET_UNORDERED(LATEST_TICK,100,ORDER_ID) ORDERS")
NODE_39_EP_PARAMETERS_FLAG = -2
NODE_39_NAME = declare_orders_state
NODE_39_SOURCE =  NODE_59
NODE_39_X = 1159.667
NODE_39_Y = 2323.333
NODE_42 = PER_TICK_SCRIPT(SCRIPT="nsectime ARRIVAL_TIME = 0;\
nsectime COMPLETION_TIME = 0;\
double ARRIVAL_BID = NAN();\
double ARRIVAL_ASK = NAN();\
long MSG_COUNT = 0;\
long REPLACE_COUNT = 0;\
long ORD_SIZE = 0;\
long CUM_SIZE = 0;\
long FILL_COUNT = 0;\
long CANCEL_COUNT = 0;\
long NEW_COUNT = 0;\
double CUM_VALUE = 0.0;\
double AVG_PRICE = NAN();\
long DURATION = 0;\
double DURATION_MILLIS = NAN();\
\
BID_PRICE = BID_PRICE1;\
ASK_PRICE = ASK_PRICE1;\
\
\
ARRIVAL_TIME = FIND(STATE::ORDERS,\"ARRIVAL_TIME\",0,ORDER_ID);\
COMPLETION_TIME = FIND(STATE::ORDERS,\"COMPLETION_TIME\",0,ORDER_ID);\
\
ARRIVAL_BID = FIND(STATE::ORDERS,\"ARRIVAL_BID\",NAN(),ORDER_ID);\
ARRIVAL_ASK = FIND(STATE::ORDERS,\"ARRIVAL_ASK\",NAN(),ORDER_ID);\
\
MSG_COUNT = FIND(STATE::ORDERS,\"MSG_COUNT\",0,ORDER_ID);\
REPLACE_COUNT = FIND(STATE::ORDERS,\"REPLACE_COUNT\",0,ORDER_ID);\
FILL_COUNT = FIND(STATE::ORDERS,\"FILL_COUNT\",0,ORDER_ID);\
CANCEL_COUNT = FIND(STATE::ORDERS,\"CANCEL_COUNT\",0,ORDER_ID);\
NEW_COUNT = FIND(STATE::ORDERS,\"NEW_COUNT\",0,ORDER_ID);\
\
ORD_SIZE = FIND(STATE::ORDERS,\"ORD_SIZE\",0,ORDER_ID);\
CUM_SIZE = FIND(STATE::ORDERS,\"CUM_SIZE\",0,ORDER_ID);\
CUM_VALUE = FIND(STATE::ORDERS,\"CUM_VALUE\",0.0,ORDER_ID);\
\
MSG_COUNT += 1;\
\
if (ORDSTATUS ==\"NEW\") {\
	ARRIVAL_TIME = (TIMESTAMP);\
	ARRIVAL_BID = BID_PRICE;\
	ARRIVAL_ASK = ASK_PRICE;\
	ORD_SIZE = SIZE;\
	NEW_COUNT += 1;\
}\
else if (ORDSTATUS ==\"REPLACE\") {\
	REPLACE_COUNT += 1;\
	ORD_SIZE = SIZE;\
}\
else if (ORDSTATUS == \"FILL\" ) {\
	CUM_SIZE += FILL_SIZE;\
	CUM_VALUE += EXEC_PRICE * FILL_SIZE;\
	FILL_COUNT += 1;\
	if (CUM_SIZE ==ORD_SIZE) {\
		COMPLETION_TIME = (TIMESTAMP);\
	}	\
}\
else if (ORDSTATUS == \"CANCEL\") {\
	COMPLETION_TIME = (TIMESTAMP);\
	CANCEL_COUNT += 1;\
}\
\
if (CUM_SIZE > 0) {\
	AVG_PRICE = CUM_VALUE / CUM_SIZE;\
}\
\
if (COMPLETION_TIME > 0) {\
	DURATION = NSECTIME_TO_LONG(COMPLETION_TIME) - NSECTIME_TO_LONG(ARRIVAL_TIME);\
	DURATION_MILLIS = DURATION / 1000000;\
}")
NODE_42_EP_PARAMETERS_FLAG = -2
NODE_42_SOURCE =  NODE_39
NODE_42_X = 1159.667
NODE_42_Y = 2552
NODE_46 = PER_TICK_SCRIPT(SCRIPT="double EBBO_MID = (BID_PRICE + ASK_PRICE)/2;\
double QUOTED_SPREAD = ASK_PRICE - BID_PRICE;\
\
double EFFECTIVE_SPREAD = NAN();\
double EFFECTIVE_QUOTED_SPREAD_RATIO = NAN();\
double PRICE_IMPROVED = 0.0;\
double PRICE_IMPROVED_PCNT = 0.0;\
double PRICE_IMPROVED_VALUE = 0.0;\
long AT_OR_BETTER_QTY = 0;\
long AT_OR_BETTER_COUNT = 0;\
\
double CUM_PRICE_IMPROVED_VALUE = 0.0;\
long CUM_AT_OR_BETTER_QTY = 0;\
long CUM_AT_OR_BETTER_COUNT  = 0;\
\
if (FILL_SIZE > 0) {\
	if (SIDE ==\"BUY\") {\
		EFFECTIVE_SPREAD = 2*(EXEC_PRICE - EBBO_MID);\
		PRICE_IMPROVED = ASK_PRICE - EXEC_PRICE;\
		PRICE_IMPROVED_PCNT = PRICE_IMPROVED / ASK_PRICE;\
	}\
	else {\
		EFFECTIVE_SPREAD = 2*(EBBO_MID - EXEC_PRICE);\
		PRICE_IMPROVED = EXEC_PRICE - BID_PRICE;\
		PRICE_IMPROVED_PCNT = PRICE_IMPROVED / BID_PRICE;\
	}\
	PRICE_IMPROVED_VALUE = PRICE_IMPROVED * FILL_SIZE;\
	if (QUOTED_SPREAD > 0) {\
		EFFECTIVE_QUOTED_SPREAD_RATIO = EFFECTIVE_SPREAD/QUOTED_SPREAD;\
	}\
	if(PRICE_IMPROVED >=0) {\
		AT_OR_BETTER_QTY = FILL_SIZE;\
		AT_OR_BETTER_COUNT = 1;\
	}\
}\
\
CUM_PRICE_IMPROVED_VALUE = FIND(STATE::ORDERS,\"CUM_PRICE_IMPROVED_VALUE\",0.0,ORDER_ID);\
CUM_AT_OR_BETTER_QTY = FIND(STATE::ORDERS,\"CUM_AT_OR_BETTER_QTY\",0,ORDER_ID);\
CUM_AT_OR_BETTER_COUNT  = FIND(STATE::ORDERS,\"CUM_AT_OR_BETTER_COUNT\",0,ORDER_ID);\
\
CUM_PRICE_IMPROVED_VALUE += PRICE_IMPROVED_VALUE;\
CUM_AT_OR_BETTER_QTY += AT_OR_BETTER_QTY;\
CUM_AT_OR_BETTER_COUNT  +=  + AT_OR_BETTER_COUNT;")
NODE_46_EP_PARAMETERS_FLAG = -2
NODE_46_NAME = exec_stats
NODE_46_SOURCE =  NODE_42
NODE_46_X = 1159.667
NODE_46_Y = 2846.667
NODE_56 = UPDATE_TICK_SETS(TICK_SETS="STATE::ORDERS")
NODE_56_EP_PARAMETERS_FLAG = -2
NODE_56_NAME = ord
NODE_56_SOURCE =  NODE_46
NODE_56_X = 1159.667
NODE_56_Y = 3126.667
NODE_58 = NUM_TICKS
NODE_58_EP_PARAMETERS_FLAG = -2
NODE_58_SOURCE =  NODE_56
NODE_58_X = 1159.667
NODE_58_Y = 3373.333
NODE_59 = TABLE(FIELDS="BID_PRICE double, ASK_PRICE double, \
BID_PRICE1 double, ASK_PRICE1 double",KEEP_INPUT_FIELDS=true)
NODE_59_EP_PARAMETERS_FLAG = -2
NODE_59_NAME = force_schema_for_bid_and_ask
NODE_59_SOURCE =  NODE_37
NODE_59_X = 1159.667
NODE_59_Y = 2039.333
NODE_63 = DUMP_TICK_SET(TICK_SET="STATE::ORDERS")
NODE_63_EP_PARAMETERS_FLAG = -2
NODE_63_SOURCE =  NODE_58
NODE_63_X = 1162.333
NODE_63_Y = 3586.667
NODE_65 = MERGE(IDENTIFY_INPUT_TS=false)
NODE_65_BIND_SECURITY = eval(THIS::primary_symlist) 0
NODE_65_EP_PARAMETERS_FLAG = -2
NODE_65_SOURCE =  NODE_63
NODE_65_X = 1159.667
NODE_65_Y = 3800
NODE_66 = PASSTHROUGH
NODE_66_EP_PARAMETERS_FLAG = -2
NODE_66_NAME = book
NODE_66_TICK_TYPE = MKTDATA::BOOK
NODE_66_X = 705
NODE_66_Y = 326
NODE_69 = PASSTHROUGH
NODE_69_EP_PARAMETERS_FLAG = -2
NODE_69_NAME = output
NODE_69_SOURCE =  NODE_65
NODE_69_X = 1159.667
NODE_69_Y = 4046.667
one_to_many_symbol_mapping = 0
QUERY_BATCH_SIZE = 0
ROOT = TABLE(FIELDS=SYM,KEEP_INPUT_FIELDS=true)
ROOT_EP_PARAMETERS_FLAG = -2
ROOT_SOURCE =  NODE_69
ROOT_X = 1317.667
ROOT_Y = 4386
SECURITY = eval(THIS::primary_symlist) 0 No
SECURITY = HSBA/L 0 No
SHOW_TEMPLATE = 
START = 20210625000000000
start_expression = TODAY()
TYPE = GRAPH

[ord_with_book_and_trd_old]
COMMENT = 
CPU_NUMBER = 4
DB_HINT_FOR_PROCESSING_HOST = 
END = 20210626000000000
end_expression = DATEADD("DAY",1,TODAY())
graph_reuse = 1
NESTED_OTQS_USE_ONLY_SINKS_FOR_OUTPUT = TRUE
NODE_101 = PASSTHROUGH(FIELDS="BID_PRICE1,ASK_PRICE1,BID_PRICE2,ASK_PRICE2,BID_PRICE3,ASK_PRICE3,BID_PRICE4,ASK_PRICE4,BID_PRICE5,ASK_PRICE5,\
BID_SIZE1,ASK_SIZE1,BID_SIZE2,ASK_SIZE2,BID_SIZE3,ASK_SIZE3,BID_SIZE4,ASK_SIZE4,BID_SIZE5,ASK_SIZE5,\
MKT_LAST_VALUE",DROP_FIELDS=true)
NODE_101_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_101_BREAKPOINT_INPUT_PINS = IN
NODE_101_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_101_BREAKPOINT_OUTPUT_PINS = OUT
NODE_101_EP_PARAMETERS_FLAG = -2
NODE_101_NAME = drop_fields
NODE_101_SOURCE =  NODE_89
NODE_101_X = 882.333
NODE_101_Y = 6562
NODE_104 = TABLE(FIELDS="SYM,\
BID_PRICE double, \
ASK_PRICE double,\
ORDER_ID string[32],\
ORDSTYLE string[1],\
ORDSTATUS string,\
SEQ_ID long,\
SIDE string[4],\
ORD_SIZE long,\
LIMIT_PRICE double,\
EXEC_PRICE double,\
FILL_SIZE long,\
CUM_SIZE long,\
LEAVES_SIZE long,\
CUM_VALUE long,\
ORDER_VWAP double,\
CCYMULTIPLIER double,\
ALGO string[1],\
ISIN string[13],\
MIC string[4],\
VENUE string[7],\
CCY string[3],\
MKT_LAST_PRICE double,\
MKT_LAST_SIZE long,\
MKT_ACC_SIZE long,\
MKT_ACC_VALUE double,\
ARRIVAL_TIME nsectime,\
COMPLETION_TIME nsectime,\
ARRIVAL_BID double,\
ARRIVAL_ASK double,\
ARRIVAL_MKT_ACC_SIZE long,\
ARRIVAL_MKT_ACC_VALUE double,\
MSG_COUNT long,\
NEW_COUNT long,\
REPLACE_COUNT long,\
FILL_COUNT long,\
CANCEL_COUNT long,\
DURATION long,\
DURATION_MILLIS double,\
EBBO_MID double,\
QUOTED_SPREAD double,\
EFFECTIVE_SPREAD double,\
EFFECTIVE_QUOTED_SPREAD_RATIO double,\
PRICE_IMPROVED double,\
PRICE_IMPROVED_PCNT double,\
PRICE_IMPROVED_VALUE double,\
AT_OR_BETTER_QTY long,\
AT_OR_BETTER_COUNT long,\
CUM_PRICE_IMPROVED_VALUE double,\
CUM_AT_OR_BETTER_QTY long,\
CUM_AT_OR_BETTER_COUNT long,\
PARTICIPATION double,\
MKT_INTERVAL_VWAP double,\
TARGET_QTY long,\
AVAILABLE_QTY long,\
TARGET_PRICE double,\
TOUCH_FILL_RATE double,\
OVERSIZED_FILL_RATE double,\
PRICE_IMPROV_VS_EXP double,\
QTY_AHEAD long,\
QTY_TRADED_AHEAD long,\
PASSIVE_PERF string")
NODE_104_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_104_BREAKPOINT_INPUT_PINS = IN
NODE_104_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_104_BREAKPOINT_OUTPUT_PINS = OUT
NODE_104_EP_PARAMETERS_FLAG = -2
NODE_104_NAME = standardize_schema
NODE_104_SOURCE =  NODE_69
NODE_104_X = 882.333
NODE_104_Y = 7555.333
NODE_119 = SAVE_SNAPSHOT
NODE_119_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_119_BREAKPOINT_INPUT_PINS = IN
NODE_119_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_119_BREAKPOINT_OUTPUT_PINS = OUT
NODE_119_EP_PARAMETERS_FLAG = -2
NODE_119_SOURCE =  NODE_104
NODE_119_X = 886
NODE_119_Y = 8181.667
NODE_120 = MERGE(IDENTIFY_INPUT_TS=false)
NODE_120_BIND_SECURITY = eval(THIS::primary_symlist) 0
NODE_120_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_120_BREAKPOINT_INPUT_PINS = IN
NODE_120_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_120_BREAKPOINT_OUTPUT_PINS = OUT
NODE_120_EP_PARAMETERS_FLAG = -2
NODE_120_SOURCE =  NODE_124
NODE_120_X = 883.333
NODE_120_Y = 4508.667
NODE_124 = TABLE(FIELDS="BID_PRICE double, ASK_PRICE double,\
BID_PRICE1 double, ASK_PRICE1 double,\
BID_PRICE2 double, ASK_PRICE2 double,\
BID_PRICE3 double, ASK_PRICE3 double,\
BID_PRICE4 double, ASK_PRICE4 double,\
BID_PRICE5 double, ASK_PRICE5 double,\
BID_SIZE1 long, ASK_SIZE1 long,\
BID_SIZE2 long, ASK_SIZE2 long,\
BID_SIZE3 long, ASK_SIZE3 long,\
BID_SIZE4 long, ASK_SIZE4 long,\
BID_SIZE5 long, ASK_SIZE5 long,\
MKT_ACC_SIZE double (0),\
MKT_ACC_VALUE double (0)",KEEP_INPUT_FIELDS=true)
NODE_124_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_124_BREAKPOINT_INPUT_PINS = IN
NODE_124_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_124_BREAKPOINT_OUTPUT_PINS = OUT
NODE_124_EP_PARAMETERS_FLAG = -2
NODE_124_SOURCE =  NODE_125
NODE_124_X = 885
NODE_124_Y = 4100.667
NODE_125 = PASSTHROUGH(FIELDS="book.TIMESTAMP,ord.TIMESTAMP",DROP_FIELDS=true)
NODE_125_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_125_BREAKPOINT_INPUT_PINS = IN
NODE_125_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_125_BREAKPOINT_OUTPUT_PINS = OUT
NODE_125_EP_PARAMETERS_FLAG = -2
NODE_125_NAME = drop_ts
NODE_125_SOURCE =  NODE_126
NODE_125_X = 882.333
NODE_125_Y = 3636.667
NODE_126 = JOIN_BY_TIME(SOURCE_ORDER="book,ord",LEADING_SOURCES=ord,SAME_TIMESTAMP_JOIN_POLICY=ARRIVAL_ORDER,ADD_SOURCE_PREFIX=false)
NODE_126_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_126_BREAKPOINT_INPUT_PINS = IN
NODE_126_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_126_BREAKPOINT_OUTPUT_PINS = OUT
NODE_126_EP_PARAMETERS_FLAG = -2
NODE_126_NAME = ord_to_tob
NODE_126_SOURCE =  NODE_127 NODE_130
NODE_126_X = 883.333
NODE_126_Y = 3172.667
NODE_127 = PASSTHROUGH
NODE_127_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_127_BREAKPOINT_INPUT_PINS = IN
NODE_127_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_127_BREAKPOINT_OUTPUT_PINS = OUT
NODE_127_EP_PARAMETERS_FLAG = -2
NODE_127_NAME = book
NODE_127_SOURCE =  NODE_128..IF
NODE_127_X = 539.333
NODE_127_Y = 2770
NODE_128 = WHERE_CLAUSE(WHERE="BID_PRICE1 != BID_PRICE1[-1] OR ASK_PRICE1 != ASK_PRICE1[-1] OR\
BID_SIZE1 != BID_SIZE1[-1] OR ASK_SIZE1 != ASK_SIZE1[-1]")
NODE_128_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_128_BREAKPOINT_INPUT_PINS = IN
NODE_128_BREAKPOINT_OUTPUT_PIN_ELSE = 0 0 134217728 0 0
NODE_128_BREAKPOINT_OUTPUT_PIN_IF = 0 0 134217728 0 0
NODE_128_BREAKPOINT_OUTPUT_PINS = ELSE IF
NODE_128_EP_PARAMETERS_FLAG = -2
NODE_128_NAME = top_of_book_change
NODE_128_SOURCE =  NODE_129
NODE_128_X = 398
NODE_128_Y = 2428.667
NODE_129 = PASSTHROUGH
NODE_129_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_129_BREAKPOINT_INPUT_PINS = IN
NODE_129_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_129_BREAKPOINT_OUTPUT_PINS = OUT
NODE_129_EP_PARAMETERS_FLAG = -2
NODE_129_NAME = book
NODE_129_TICK_TYPE = MKTDATA::BOOK
NODE_129_X = 400.667
NODE_129_Y = 1995.333
NODE_130 = PASSTHROUGH
NODE_130_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_130_BREAKPOINT_INPUT_PINS = IN
NODE_130_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_130_BREAKPOINT_OUTPUT_PINS = OUT
NODE_130_EP_PARAMETERS_FLAG = -2
NODE_130_NAME = ord
NODE_130_SOURCE =  NODE_131
NODE_130_X = 1227.333
NODE_130_Y = 2770
NODE_131 = PASSTHROUGH(FIELDS="trd.TIMESTAMP,ord.TIMESTAMP",DROP_FIELDS=true)
NODE_131_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_131_BREAKPOINT_INPUT_PINS = IN
NODE_131_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_131_BREAKPOINT_OUTPUT_PINS = OUT
NODE_131_EP_PARAMETERS_FLAG = -2
NODE_131_NAME = drop_ts_fields
NODE_131_SOURCE =  NODE_132
NODE_131_X = 1298.333
NODE_131_Y = 2428.667
NODE_132 = JOIN_BY_TIME(LEADING_SOURCES=ord,SAME_TIMESTAMP_JOIN_POLICY=EACH_FOR_LEADER_WITH_FIRST,ADD_SOURCE_PREFIX=false)
NODE_132_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_132_BREAKPOINT_INPUT_PINS = IN
NODE_132_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_132_BREAKPOINT_OUTPUT_PINS = OUT
NODE_132_EP_PARAMETERS_FLAG = -2
NODE_132_NAME = ord_to_trd
NODE_132_SOURCE =  NODE_133 NODE_136
NODE_132_X = 1298.333
NODE_132_Y = 1995.333
NODE_133 = PASSTHROUGH(FIELDS="ebbo.TIMESTAMP,ord.TIMESTAMP",DROP_FIELDS=true)
NODE_133_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_133_BREAKPOINT_INPUT_PINS = IN
NODE_133_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_133_BREAKPOINT_OUTPUT_PINS = OUT
NODE_133_EP_PARAMETERS_FLAG = -2
NODE_133_NAME = ord
NODE_133_SOURCE =  NODE_134
NODE_133_X = 938.333
NODE_133_Y = 1562
NODE_134 = MERGE(IDENTIFY_INPUT_TS=false)
NODE_134_BIND_SECURITY = eval(THIS::symlist_for_primary,"SYM=expr(_SYMBOL_NAME)") 0
NODE_134_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_134_BREAKPOINT_INPUT_PINS = IN
NODE_134_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_134_BREAKPOINT_OUTPUT_PINS = OUT
NODE_134_EP_PARAMETERS_FLAG = -2
NODE_134_NAME = merge_across_venues_for_primary
NODE_134_SOURCE =  NODE_135
NODE_134_X = 830
NODE_134_Y = 1128.667
NODE_135 = PASSTHROUGH
NODE_135_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_135_BREAKPOINT_INPUT_PINS = IN
NODE_135_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_135_BREAKPOINT_OUTPUT_PINS = OUT
NODE_135_EP_PARAMETERS_FLAG = -2
NODE_135_NAME = ord
NODE_135_TICK_TYPE = S_ORDERS::ORD
NODE_135_X = 830
NODE_135_Y = 756.667
NODE_136 = PASSTHROUGH
NODE_136_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_136_BREAKPOINT_INPUT_PINS = IN
NODE_136_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_136_BREAKPOINT_OUTPUT_PINS = OUT
NODE_136_EP_PARAMETERS_FLAG = -2
NODE_136_NAME = trd
NODE_136_SOURCE =  NODE_137
NODE_136_X = 1662
NODE_136_Y = 1562
NODE_137 = COMPUTE(COMPUTE="SUM(INPUT_FIELD_NAME=\"SIZE\") MKT_ACC_SIZE,\
SUM(INPUT_FIELD_NAME=\"VALUE\") MKT_ACC_VALUE",IS_RUNNING_AGGR=true,APPEND_OUTPUT_FIELD_NAME=false)
NODE_137_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_137_BREAKPOINT_INPUT_PINS = IN
NODE_137_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_137_BREAKPOINT_OUTPUT_PINS = OUT
NODE_137_EP_PARAMETERS_FLAG = -2
NODE_137_NAME = acc_size
NODE_137_SOURCE =  NODE_138
NODE_137_X = 1714.333
NODE_137_Y = 1128.667
NODE_138 = MERGE
NODE_138_BIND_SECURITY = eval(THIS::symlist_for_primary,"SYM=expr(_SYMBOL_NAME)") 0
NODE_138_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_138_BREAKPOINT_INPUT_PINS = IN
NODE_138_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_138_BREAKPOINT_OUTPUT_PINS = OUT
NODE_138_EP_PARAMETERS_FLAG = -2
NODE_138_NAME = merge_across_venues_for_primary
NODE_138_SOURCE =  NODE_139
NODE_138_X = 1715.333
NODE_138_Y = 756.667
NODE_139 = ADD_FIELDS(FIELDS="VALUE double = PRICE * SIZE")
NODE_139_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_139_BREAKPOINT_INPUT_PINS = IN
NODE_139_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_139_BREAKPOINT_OUTPUT_PINS = OUT
NODE_139_EP_PARAMETERS_FLAG = -2
NODE_139_NAME = value
NODE_139_SOURCE =  NODE_140
NODE_139_X = 1717
NODE_139_Y = 446
NODE_140 = PASSTHROUGH(FIELDS="PRICE,SIZE")
NODE_140_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_140_BREAKPOINT_INPUT_PINS = IN
NODE_140_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_140_BREAKPOINT_OUTPUT_PINS = OUT
NODE_140_EP_PARAMETERS_FLAG = -2
NODE_140_TICK_TYPE = MKTDATA::TRD
NODE_140_X = 1715.333
NODE_140_Y = 130
NODE_39 = DECLARE_STATE_VARIABLES(VARIABLES="TICK_SET_UNORDERED(LATEST_TICK,100,ORDER_ID) ORDERS")
NODE_39_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_39_BREAKPOINT_INPUT_PINS = IN
NODE_39_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_39_BREAKPOINT_OUTPUT_PINS = OUT
NODE_39_EP_PARAMETERS_FLAG = -2
NODE_39_NAME = declare_orders_state
NODE_39_SOURCE =  NODE_120
NODE_39_X = 882.333
NODE_39_Y = 4824.667
NODE_42 = PER_TICK_SCRIPT(SCRIPT="nsectime ARRIVAL_TIME = 0;\
nsectime COMPLETION_TIME = 0;\
double ARRIVAL_BID = NAN();\
double ARRIVAL_ASK = NAN();\
double ARRIVAL_MKT_ACC_SIZE = 0.0;\
double ARRIVAL_MKT_ACC_VALUE = NAN();\
\
\
long MSG_COUNT = 0;\
long REPLACE_COUNT = 0;\
long ORD_SIZE = 0;\
long CUM_SIZE = 0;\
long LEAVES_SIZE = 0;\
long FILL_COUNT = 0;\
long CANCEL_COUNT = 0;\
long NEW_COUNT = 0;\
double CUM_VALUE = 0.0;\
double AVG_PRICE = NAN();\
long DURATION = 0;\
double DURATION_MILLIS = NAN();\
\
BID_PRICE = BID_PRICE1;\
ASK_PRICE = ASK_PRICE1;\
\
\
ARRIVAL_TIME = FIND(STATE::ORDERS,\"ARRIVAL_TIME\",0,ORDER_ID);\
COMPLETION_TIME = FIND(STATE::ORDERS,\"COMPLETION_TIME\",0,ORDER_ID);\
\
ARRIVAL_BID = FIND(STATE::ORDERS,\"ARRIVAL_BID\",NAN(),ORDER_ID);\
ARRIVAL_ASK = FIND(STATE::ORDERS,\"ARRIVAL_ASK\",NAN(),ORDER_ID);\
\
ARRIVAL_MKT_ACC_SIZE = FIND(STATE::ORDERS,\"ARRIVAL_MKT_ACC_SIZE\",NAN(),ORDER_ID);\
ARRIVAL_MKT_ACC_VALUE = FIND(STATE::ORDERS,\"ARRIVAL_MKT_ACC_VALUE\",NAN(),ORDER_ID);\
\
\
\
MSG_COUNT = FIND(STATE::ORDERS,\"MSG_COUNT\",0,ORDER_ID);\
REPLACE_COUNT = FIND(STATE::ORDERS,\"REPLACE_COUNT\",0,ORDER_ID);\
FILL_COUNT = FIND(STATE::ORDERS,\"FILL_COUNT\",0,ORDER_ID);\
CANCEL_COUNT = FIND(STATE::ORDERS,\"CANCEL_COUNT\",0,ORDER_ID);\
NEW_COUNT = FIND(STATE::ORDERS,\"NEW_COUNT\",0,ORDER_ID);\
\
ORD_SIZE = FIND(STATE::ORDERS,\"ORD_SIZE\",0,ORDER_ID);\
CUM_SIZE = FIND(STATE::ORDERS,\"CUM_SIZE\",0,ORDER_ID);\
CUM_VALUE = FIND(STATE::ORDERS,\"CUM_VALUE\",0.0,ORDER_ID);\
\
LEAVES_SIZE = SIZE;\
\
MSG_COUNT += 1;\
\
if (ORDSTATUS ==\"NEW\") {\
	ARRIVAL_TIME = (TIMESTAMP);\
	ARRIVAL_BID = BID_PRICE;\
	ARRIVAL_ASK = ASK_PRICE;\
	ARRIVAL_MKT_ACC_SIZE = MKT_ACC_SIZE;\
	ARRIVAL_MKT_ACC_VALUE = MKT_ACC_VALUE;\
	ORD_SIZE = SIZE;\
	NEW_COUNT += 1;\
}\
else if (ORDSTATUS ==\"REPLACE\") {\
	REPLACE_COUNT += 1;\
	ORD_SIZE = SIZE;\
}\
else if (ORDSTATUS == \"FILL\" ) {\
	CUM_SIZE += FILL_SIZE;\
	CUM_VALUE += EXEC_PRICE * FILL_SIZE;\
	FILL_COUNT += 1;\
	if (CUM_SIZE ==ORD_SIZE) {\
		COMPLETION_TIME = (TIMESTAMP);\
	}	\
}\
else if (ORDSTATUS == \"CANCEL\") {\
	COMPLETION_TIME = (TIMESTAMP);\
	CANCEL_COUNT += 1;\
}\
\
if (CUM_SIZE > 0) {\
	AVG_PRICE = CUM_VALUE / CUM_SIZE;\
}\
\
if (COMPLETION_TIME > 0) {\
	DURATION = NSECTIME_TO_LONG(COMPLETION_TIME) - NSECTIME_TO_LONG(ARRIVAL_TIME);\
	DURATION_MILLIS = DURATION / 1000000;\
}")
NODE_42_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_42_BREAKPOINT_INPUT_PINS = IN
NODE_42_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_42_BREAKPOINT_OUTPUT_PINS = OUT
NODE_42_EP_PARAMETERS_FLAG = -2
NODE_42_NAME = arrival_and_msg_counts
NODE_42_SOURCE =  NODE_39
NODE_42_X = 882.333
NODE_42_Y = 5166
NODE_46 = PER_TICK_SCRIPT(SCRIPT="double EBBO_MID = (BID_PRICE + ASK_PRICE)/2;\
double QUOTED_SPREAD = ASK_PRICE - BID_PRICE;\
\
double EFFECTIVE_SPREAD = NAN();\
double EFFECTIVE_QUOTED_SPREAD_RATIO = NAN();\
double PRICE_IMPROVED = 0.0;\
double PRICE_IMPROVED_PCNT = 0.0;\
double PRICE_IMPROVED_VALUE = 0.0;\
long AT_OR_BETTER_QTY = 0;\
long AT_OR_BETTER_COUNT = 0;\
\
double CUM_PRICE_IMPROVED_VALUE = 0.0;\
long CUM_AT_OR_BETTER_QTY = 0;\
long CUM_AT_OR_BETTER_COUNT  = 0;\
\
double ORDER_VWAP = NAN();\
double PARTICIPATION = NAN();\
double MKT_INTERVAL_VWAP = NAN();\
\
if (FILL_SIZE > 0) {\
	if (SIDE ==\"BUY\") {\
		EFFECTIVE_SPREAD = 2*(EXEC_PRICE - EBBO_MID);\
		PRICE_IMPROVED = ASK_PRICE - EXEC_PRICE;\
		PRICE_IMPROVED_PCNT = PRICE_IMPROVED / ASK_PRICE;\
	}\
	else {\
		EFFECTIVE_SPREAD = 2*(EBBO_MID - EXEC_PRICE);\
		PRICE_IMPROVED = EXEC_PRICE - BID_PRICE;\
		PRICE_IMPROVED_PCNT = PRICE_IMPROVED / BID_PRICE;\
	}\
	PRICE_IMPROVED_VALUE = PRICE_IMPROVED * FILL_SIZE;\
	if (QUOTED_SPREAD > 0) {\
		EFFECTIVE_QUOTED_SPREAD_RATIO = EFFECTIVE_SPREAD/QUOTED_SPREAD;\
	}\
	if(PRICE_IMPROVED >=0) {\
		AT_OR_BETTER_QTY = FILL_SIZE;\
		AT_OR_BETTER_COUNT = 1;\
	}\
}\
\
CUM_PRICE_IMPROVED_VALUE = FIND(STATE::ORDERS,\"CUM_PRICE_IMPROVED_VALUE\",0.0,ORDER_ID);\
CUM_AT_OR_BETTER_QTY = FIND(STATE::ORDERS,\"CUM_AT_OR_BETTER_QTY\",0,ORDER_ID);\
CUM_AT_OR_BETTER_COUNT  = FIND(STATE::ORDERS,\"CUM_AT_OR_BETTER_COUNT\",0,ORDER_ID);\
\
CUM_PRICE_IMPROVED_VALUE += PRICE_IMPROVED_VALUE;\
CUM_AT_OR_BETTER_QTY += AT_OR_BETTER_QTY;\
CUM_AT_OR_BETTER_COUNT  +=  + AT_OR_BETTER_COUNT;\
\
if (CUM_SIZE > 0) {\
	ORDER_VWAP = CUM_VALUE/CUM_SIZE;\
	MKT_INTERVAL_VWAP = (FILL_SIZE + MKT_ACC_SIZE - ARRIVAL_MKT_ACC_SIZE) / ((EXEC_PRICE * FILL_SIZE) + MKT_ACC_VALUE - ARRIVAL_MKT_ACC_VALUE);\
	PARTICIPATION = CUM_SIZE / (FILL_SIZE + MKT_ACC_SIZE);\
}")
NODE_46_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_46_BREAKPOINT_INPUT_PINS = IN
NODE_46_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_46_BREAKPOINT_OUTPUT_PINS = OUT
NODE_46_EP_PARAMETERS_FLAG = -2
NODE_46_NAME = exec_stats
NODE_46_SOURCE =  NODE_42
NODE_46_X = 886
NODE_46_Y = 5507.333
NODE_56 = UPDATE_TICK_SETS(TICK_SETS="STATE::ORDERS")
NODE_56_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_56_BREAKPOINT_INPUT_PINS = IN
NODE_56_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_56_BREAKPOINT_OUTPUT_PINS = OUT
NODE_56_EP_PARAMETERS_FLAG = -2
NODE_56_NAME = ord
NODE_56_SOURCE =  NODE_101
NODE_56_X = 883.333
NODE_56_Y = 6934
NODE_69 = PASSTHROUGH
NODE_69_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_69_BREAKPOINT_INPUT_PINS = IN
NODE_69_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_69_BREAKPOINT_OUTPUT_PINS = OUT
NODE_69_EP_PARAMETERS_FLAG = -2
NODE_69_NAME = output
NODE_69_SOURCE =  NODE_56
NODE_69_X = 883.333
NODE_69_Y = 7244.667
NODE_86 = PER_TICK_SCRIPT(SCRIPT="long TARGET_QTY = 0;\
long AVAILABLE_QTY = 0;\
double TARGET_PRICE = NAN();\
double TOUCH_FILL_RATE = NAN();\
double OVERSIZED_FILL_RATE = NAN();\
double PRICE_IMPROV_VS_EXP = NAN();\
\
long LOCAL::LEAVES_QTY = ORD_SIZE;\
long LOCAL::NEXT_QTY = 0;\
double LOCAL::TARGET_VALUE = 0.0;\
\
if (ORDSTYLE ==\"A\") {\
	if (SIDE==\"BUY\") {\
		if (ASK_PRICE1 <= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,ASK_SIZE1);\
			LOCAL::TARGET_VALUE += ASK_PRICE1 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += ASK_SIZE1;\
		}\
		if (ASK_PRICE2 <= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,ASK_SIZE2);\
			LOCAL::TARGET_VALUE += ASK_PRICE2 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += ASK_SIZE2;\
		}\
		if (ASK_PRICE3 <= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,ASK_SIZE3);\
			LOCAL::TARGET_VALUE += ASK_PRICE3 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += ASK_SIZE3;\
		}\
		if (ASK_PRICE4 <= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,ASK_SIZE4);\
			LOCAL::TARGET_VALUE += ASK_PRICE4 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += ASK_SIZE4;\
		}\
		if (ASK_PRICE5 <= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,ASK_SIZE5);\
			LOCAL::TARGET_VALUE += ASK_PRICE5 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += ASK_SIZE5;\
		}\
	}\
	else {\
		if (BID_PRICE1 >= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,BID_SIZE1);\
			LOCAL::TARGET_VALUE += BID_PRICE1 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += BID_SIZE1;\
		}\
		if (BID_PRICE2 >= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,BID_SIZE2);\
			LOCAL::TARGET_VALUE += BID_PRICE2 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += BID_SIZE2;\
		}\
		if (BID_PRICE3 >= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,BID_SIZE5);\
			LOCAL::TARGET_VALUE += BID_PRICE3 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += BID_SIZE3;\
		}\
		if (BID_PRICE4 >= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,BID_SIZE4);\
			LOCAL::TARGET_VALUE += BID_PRICE4 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += BID_SIZE4;\
		}\
		if (BID_PRICE5 >= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,BID_SIZE5);\
			LOCAL::TARGET_VALUE += BID_PRICE5 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += BID_SIZE5;\
		}\
	}\
	if (TARGET_QTY>0) {\
		TARGET_PRICE = LOCAL::TARGET_VALUE / TARGET_QTY;\
		TOUCH_FILL_RATE = MIN(1,FILL_SIZE/TARGET_QTY);\
		OVERSIZED_FILL_RATE = FILL_SIZE/TARGET_QTY;\
	}\
	if (ORDER_VWAP>0) {\
		PRICE_IMPROV_VS_EXP = (TARGET_PRICE - ORDER_VWAP)/ORDER_VWAP;\
	}\
\
\
}")
NODE_86_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_86_BREAKPOINT_INPUT_PINS = IN
NODE_86_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_86_BREAKPOINT_OUTPUT_PINS = OUT
NODE_86_EP_PARAMETERS_FLAG = -2
NODE_86_NAME = aggr_stats
NODE_86_SOURCE =  NODE_46
NODE_86_X = 882.333
NODE_86_Y = 5848.667
NODE_89 = PER_TICK_SCRIPT(SCRIPT="long QTY_AHEAD = 0;\
long QTY_TRADED_AHEAD = 0;\
string PASSIVE_PERF = \"\";\
long LOCAL::MKT_INTERVAL_SIZE = 0;\
QTY_AHEAD = FIND(STATE::ORDERS,\"QTY_AHEAD\",0,ORDER_ID);\
\
\
if (ORDSTYLE ==\"P\") {\
	if (ORDSTATUS ==\"NEW\") {\
		if (SIDE==\"SELL\") {\
			if (LIMIT_PRICE >= ASK_PRICE1) {\
				QTY_AHEAD = ASK_SIZE1;\
			}\
			if (LIMIT_PRICE >= ASK_PRICE2) {\
				QTY_AHEAD += ASK_SIZE2;\
			}\
			if (LIMIT_PRICE >= ASK_PRICE3) {\
				QTY_AHEAD += ASK_SIZE3;\
			}\
			if (LIMIT_PRICE >= ASK_PRICE4) {\
				QTY_AHEAD += ASK_SIZE4;\
			}\
			if (LIMIT_PRICE >= ASK_PRICE5) {\
				QTY_AHEAD += ASK_SIZE5;\
			}\
		}\
		else {\
			if (LIMIT_PRICE <= BID_PRICE1) {\
				QTY_AHEAD = BID_SIZE1;\
			}\
			if (LIMIT_PRICE <= BID_PRICE2) {\
				QTY_AHEAD += BID_SIZE2;\
			}\
			if (LIMIT_PRICE <= BID_PRICE3) {\
				QTY_AHEAD += BID_SIZE3;\
			}\
			if (LIMIT_PRICE <= BID_PRICE4) {\
				QTY_AHEAD += BID_SIZE4;\
			}\
			if (LIMIT_PRICE <= BID_PRICE5) {\
				QTY_AHEAD += BID_SIZE5;\
			}\
		}\
	}\
	if (CUM_SIZE > 0) {\
		LOCAL::MKT_INTERVAL_SIZE = FILL_SIZE + MKT_ACC_SIZE - ARRIVAL_MKT_ACC_SIZE;\
		QTY_TRADED_AHEAD = (LOCAL::MKT_INTERVAL_SIZE - QTY_AHEAD) - CUM_SIZE;\
	}\
}")
NODE_89_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_89_BREAKPOINT_INPUT_PINS = IN
NODE_89_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_89_BREAKPOINT_OUTPUT_PINS = OUT
NODE_89_EP_PARAMETERS_FLAG = -2
NODE_89_NAME = passive_stats
NODE_89_SOURCE =  NODE_86
NODE_89_X = 885
NODE_89_Y = 6190
one_to_many_symbol_mapping = 0
PROCESS_DBS_CONCURENTLY = 1
QUERY_BATCH_SIZE = 0
ROOT = NUM_TICKS(BUCKET_INTERVAL=1)
ROOT_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
ROOT_BREAKPOINT_INPUT_PINS = IN
ROOT_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
ROOT_BREAKPOINT_OUTPUT_PINS = OUT
ROOT_EP_PARAMETERS_FLAG = -2
ROOT_SOURCE =  NODE_119
ROOT_X = 883.333
ROOT_Y = 8782.667
RunningQuery = 1
SECURITY = eval(THIS::primary_symlist) 0 No
SECURITY = HSBA/L 0 No
SHOW_TEMPLATE = 
START = 20210625000000000
start_expression = TODAY()
TYPE = GRAPH

[ord_with_book_and_trd_old_1]
COMMENT = 
CPU_NUMBER = 4
DB_HINT_FOR_PROCESSING_HOST = 
END = 20210626000000000
end_expression = DATEADD("DAY",1,TODAY())
graph_reuse = 1
NESTED_OTQS_USE_ONLY_SINKS_FOR_OUTPUT = TRUE
NODE_101 = PASSTHROUGH(FIELDS="BID_PRICE1,ASK_PRICE1,BID_PRICE2,ASK_PRICE2,BID_PRICE3,ASK_PRICE3,BID_PRICE4,ASK_PRICE4,BID_PRICE5,ASK_PRICE5,\
BID_SIZE1,ASK_SIZE1,BID_SIZE2,ASK_SIZE2,BID_SIZE3,ASK_SIZE3,BID_SIZE4,ASK_SIZE4,BID_SIZE5,ASK_SIZE5,\
MKT_LAST_VALUE",DROP_FIELDS=true)
NODE_101_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_101_BREAKPOINT_INPUT_PINS = IN
NODE_101_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_101_BREAKPOINT_OUTPUT_PINS = OUT
NODE_101_EP_PARAMETERS_FLAG = -2
NODE_101_NAME = drop_fields
NODE_101_SOURCE =  NODE_89
NODE_101_X = 1493
NODE_101_Y = 6400.667
NODE_104 = TW_AVERAGE
NODE_104_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_104_BREAKPOINT_INPUT_PINS = IN
NODE_104_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_104_BREAKPOINT_OUTPUT_PINS = OUT
NODE_104_EP_PARAMETERS_FLAG = -2
NODE_104_NAME = standardize_schema
NODE_104_SOURCE =  NODE_69
NODE_104_X = 1023.667
NODE_104_Y = 7363.333
NODE_120 = MERGE(IDENTIFY_INPUT_TS=false)
NODE_120_BIND_SECURITY = eval(THIS::primary_symlist) 0
NODE_120_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_120_BREAKPOINT_INPUT_PINS = IN
NODE_120_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_120_BREAKPOINT_OUTPUT_PINS = OUT
NODE_120_EP_PARAMETERS_FLAG = -2
NODE_120_SOURCE =  NODE_124
NODE_120_X = 1016
NODE_120_Y = 4328.333
NODE_124 = TABLE(FIELDS="BID_PRICE double, ASK_PRICE double,\
BID_PRICE1 double, ASK_PRICE1 double,\
BID_PRICE2 double, ASK_PRICE2 double,\
BID_PRICE3 double, ASK_PRICE3 double,\
BID_PRICE4 double, ASK_PRICE4 double,\
BID_PRICE5 double, ASK_PRICE5 double,\
BID_SIZE1 long, ASK_SIZE1 long,\
BID_SIZE2 long, ASK_SIZE2 long,\
BID_SIZE3 long, ASK_SIZE3 long,\
BID_SIZE4 long, ASK_SIZE4 long,\
BID_SIZE5 long, ASK_SIZE5 long,\
MKT_ACC_SIZE double (0),\
MKT_ACC_VALUE double (0)",KEEP_INPUT_FIELDS=true)
NODE_124_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_124_BREAKPOINT_INPUT_PINS = IN
NODE_124_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_124_BREAKPOINT_OUTPUT_PINS = OUT
NODE_124_EP_PARAMETERS_FLAG = -2
NODE_124_SOURCE =  NODE_125
NODE_124_X = 1120.667
NODE_124_Y = 4007
NODE_125 = PASSTHROUGH(FIELDS="book.TIMESTAMP,ord.TIMESTAMP",DROP_FIELDS=true)
NODE_125_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_125_BREAKPOINT_INPUT_PINS = IN
NODE_125_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_125_BREAKPOINT_OUTPUT_PINS = OUT
NODE_125_EP_PARAMETERS_FLAG = -2
NODE_125_NAME = drop_ts
NODE_125_SOURCE =  NODE_126
NODE_125_X = 1068
NODE_125_Y = 3648.667
NODE_126 = JOIN_BY_TIME(SOURCE_ORDER="book,ord",LEADING_SOURCES=ord,SAME_TIMESTAMP_JOIN_POLICY=ARRIVAL_ORDER,ADD_SOURCE_PREFIX=false)
NODE_126_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_126_BREAKPOINT_INPUT_PINS = IN
NODE_126_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_126_BREAKPOINT_OUTPUT_PINS = OUT
NODE_126_EP_PARAMETERS_FLAG = -2
NODE_126_NAME = ord_to_tob
NODE_126_SOURCE =  NODE_127 NODE_130
NODE_126_X = 1016
NODE_126_Y = 3172.667
NODE_127 = PASSTHROUGH
NODE_127_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_127_BREAKPOINT_INPUT_PINS = IN
NODE_127_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_127_BREAKPOINT_OUTPUT_PINS = OUT
NODE_127_EP_PARAMETERS_FLAG = -2
NODE_127_NAME = book
NODE_127_SOURCE =  NODE_128..IF
NODE_127_X = 685
NODE_127_Y = 2782
NODE_128 = WHERE_CLAUSE(WHERE="BID_PRICE1 != BID_PRICE1[-1] OR ASK_PRICE1 != ASK_PRICE1[-1] OR\
BID_SIZE1 != BID_SIZE1[-1] OR ASK_SIZE1 != ASK_SIZE1[-1]")
NODE_128_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_128_BREAKPOINT_INPUT_PINS = IN
NODE_128_BREAKPOINT_OUTPUT_PIN_ELSE = 0 0 134217728 0 0
NODE_128_BREAKPOINT_OUTPUT_PIN_IF = 0 0 134217728 0 0
NODE_128_BREAKPOINT_OUTPUT_PINS = ELSE IF
NODE_128_EP_PARAMETERS_FLAG = -2
NODE_128_NAME = top_of_book_change
NODE_128_SOURCE =  NODE_129
NODE_128_X = 728.667
NODE_128_Y = 2440.667
NODE_129 = PASSTHROUGH
NODE_129_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_129_BREAKPOINT_INPUT_PINS = IN
NODE_129_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_129_BREAKPOINT_OUTPUT_PINS = OUT
NODE_129_EP_PARAMETERS_FLAG = -2
NODE_129_NAME = book
NODE_129_TICK_TYPE = MKTDATA::BOOK
NODE_129_X = 610.333
NODE_129_Y = 2007.333
NODE_130 = PASSTHROUGH
NODE_130_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_130_BREAKPOINT_INPUT_PINS = IN
NODE_130_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_130_BREAKPOINT_OUTPUT_PINS = OUT
NODE_130_EP_PARAMETERS_FLAG = -2
NODE_130_NAME = ord
NODE_130_SOURCE =  NODE_131
NODE_130_X = 1373
NODE_130_Y = 2782
NODE_131 = PASSTHROUGH(FIELDS="trd.TIMESTAMP,ord.TIMESTAMP",DROP_FIELDS=true)
NODE_131_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_131_BREAKPOINT_INPUT_PINS = IN
NODE_131_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_131_BREAKPOINT_OUTPUT_PINS = OUT
NODE_131_EP_PARAMETERS_FLAG = -2
NODE_131_NAME = drop_ts_fields
NODE_131_SOURCE =  NODE_132
NODE_131_X = 1474
NODE_131_Y = 2440.667
NODE_132 = JOIN_BY_TIME(LEADING_SOURCES=ord,SAME_TIMESTAMP_JOIN_POLICY=EACH_FOR_LEADER_WITH_FIRST,ADD_SOURCE_PREFIX=false)
NODE_132_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_132_BREAKPOINT_INPUT_PINS = IN
NODE_132_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_132_BREAKPOINT_OUTPUT_PINS = OUT
NODE_132_EP_PARAMETERS_FLAG = -2
NODE_132_NAME = ord_to_trd
NODE_132_SOURCE =  NODE_133 NODE_136
NODE_132_X = 1496
NODE_132_Y = 2007.333
NODE_133 = PASSTHROUGH(FIELDS="ebbo.TIMESTAMP,ord.TIMESTAMP",DROP_FIELDS=true)
NODE_133_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_133_BREAKPOINT_INPUT_PINS = IN
NODE_133_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_133_BREAKPOINT_OUTPUT_PINS = OUT
NODE_133_EP_PARAMETERS_FLAG = -2
NODE_133_NAME = ord
NODE_133_SOURCE =  NODE_134
NODE_133_X = 1125
NODE_133_Y = 1574
NODE_134 = MERGE(IDENTIFY_INPUT_TS=false)
NODE_134_BIND_SECURITY = eval(THIS::symlist_for_primary,"SYM=expr(_SYMBOL_NAME)") 0
NODE_134_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_134_BREAKPOINT_INPUT_PINS = IN
NODE_134_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_134_BREAKPOINT_OUTPUT_PINS = OUT
NODE_134_EP_PARAMETERS_FLAG = -2
NODE_134_NAME = merge_across_venues_for_primary
NODE_134_SOURCE =  NODE_135
NODE_134_X = 962.667
NODE_134_Y = 1128.667
NODE_135 = PASSTHROUGH
NODE_135_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_135_BREAKPOINT_INPUT_PINS = IN
NODE_135_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_135_BREAKPOINT_OUTPUT_PINS = OUT
NODE_135_EP_PARAMETERS_FLAG = -2
NODE_135_NAME = ord
NODE_135_TICK_TYPE = S_ORDERS::ORD
NODE_135_X = 1029.667
NODE_135_Y = 768.667
NODE_136 = PASSTHROUGH
NODE_136_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_136_BREAKPOINT_INPUT_PINS = IN
NODE_136_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_136_BREAKPOINT_OUTPUT_PINS = OUT
NODE_136_EP_PARAMETERS_FLAG = -2
NODE_136_NAME = trd
NODE_136_SOURCE =  NODE_137
NODE_136_X = 1807.667
NODE_136_Y = 1574
NODE_137 = COMPUTE(COMPUTE="SUM(INPUT_FIELD_NAME=\"SIZE\") MKT_ACC_SIZE,\
SUM(INPUT_FIELD_NAME=\"VALUE\") MKT_ACC_VALUE",IS_RUNNING_AGGR=true,APPEND_OUTPUT_FIELD_NAME=false)
NODE_137_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_137_BREAKPOINT_INPUT_PINS = IN
NODE_137_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_137_BREAKPOINT_OUTPUT_PINS = OUT
NODE_137_EP_PARAMETERS_FLAG = -2
NODE_137_NAME = acc_size
NODE_137_SOURCE =  NODE_138
NODE_137_X = 2018
NODE_137_Y = 1140.667
NODE_138 = MERGE
NODE_138_BIND_SECURITY = eval(THIS::symlist_for_primary,"SYM=expr(_SYMBOL_NAME)") 0
NODE_138_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_138_BREAKPOINT_INPUT_PINS = IN
NODE_138_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_138_BREAKPOINT_OUTPUT_PINS = OUT
NODE_138_EP_PARAMETERS_FLAG = -2
NODE_138_NAME = merge_across_venues_for_primary
NODE_138_SOURCE =  NODE_139
NODE_138_X = 1848
NODE_138_Y = 756.667
NODE_139 = ADD_FIELDS(FIELDS="VALUE double = PRICE * SIZE")
NODE_139_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_139_BREAKPOINT_INPUT_PINS = IN
NODE_139_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_139_BREAKPOINT_OUTPUT_PINS = OUT
NODE_139_EP_PARAMETERS_FLAG = -2
NODE_139_NAME = value
NODE_139_SOURCE =  NODE_140
NODE_139_X = 1852.667
NODE_139_Y = 458
NODE_140 = PASSTHROUGH(FIELDS="PRICE,SIZE")
NODE_140_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_140_BREAKPOINT_INPUT_PINS = IN
NODE_140_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_140_BREAKPOINT_OUTPUT_PINS = OUT
NODE_140_EP_PARAMETERS_FLAG = -2
NODE_140_TICK_TYPE = MKTDATA::TRD
NODE_140_X = 1911
NODE_140_Y = 130
NODE_39 = DECLARE_STATE_VARIABLES(VARIABLES="TICK_SET_UNORDERED(LATEST_TICK,100,ORDER_ID) ORDERS")
NODE_39_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_39_BREAKPOINT_INPUT_PINS = IN
NODE_39_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_39_BREAKPOINT_OUTPUT_PINS = OUT
NODE_39_EP_PARAMETERS_FLAG = -2
NODE_39_NAME = declare_orders_state
NODE_39_SOURCE =  NODE_120
NODE_39_X = 1142
NODE_39_Y = 4663.333
NODE_42 = PER_TICK_SCRIPT(SCRIPT="nsectime ARRIVAL_TIME = 0;\
nsectime COMPLETION_TIME = 0;\
double ARRIVAL_BID = NAN();\
double ARRIVAL_ASK = NAN();\
double ARRIVAL_MKT_ACC_SIZE = 0.0;\
double ARRIVAL_MKT_ACC_VALUE = NAN();\
\
\
long MSG_COUNT = 0;\
long REPLACE_COUNT = 0;\
long ORD_SIZE = 0;\
long CUM_SIZE = 0;\
long LEAVES_SIZE = 0;\
long FILL_COUNT = 0;\
long CANCEL_COUNT = 0;\
long NEW_COUNT = 0;\
double CUM_VALUE = 0.0;\
double AVG_PRICE = NAN();\
long DURATION = 0;\
double DURATION_MILLIS = NAN();\
\
BID_PRICE = BID_PRICE1;\
ASK_PRICE = ASK_PRICE1;\
\
\
ARRIVAL_TIME = FIND(STATE::ORDERS,\"ARRIVAL_TIME\",0,ORDER_ID);\
COMPLETION_TIME = FIND(STATE::ORDERS,\"COMPLETION_TIME\",0,ORDER_ID);\
\
ARRIVAL_BID = FIND(STATE::ORDERS,\"ARRIVAL_BID\",NAN(),ORDER_ID);\
ARRIVAL_ASK = FIND(STATE::ORDERS,\"ARRIVAL_ASK\",NAN(),ORDER_ID);\
\
ARRIVAL_MKT_ACC_SIZE = FIND(STATE::ORDERS,\"ARRIVAL_MKT_ACC_SIZE\",NAN(),ORDER_ID);\
ARRIVAL_MKT_ACC_VALUE = FIND(STATE::ORDERS,\"ARRIVAL_MKT_ACC_VALUE\",NAN(),ORDER_ID);\
\
\
\
MSG_COUNT = FIND(STATE::ORDERS,\"MSG_COUNT\",0,ORDER_ID);\
REPLACE_COUNT = FIND(STATE::ORDERS,\"REPLACE_COUNT\",0,ORDER_ID);\
FILL_COUNT = FIND(STATE::ORDERS,\"FILL_COUNT\",0,ORDER_ID);\
CANCEL_COUNT = FIND(STATE::ORDERS,\"CANCEL_COUNT\",0,ORDER_ID);\
NEW_COUNT = FIND(STATE::ORDERS,\"NEW_COUNT\",0,ORDER_ID);\
\
ORD_SIZE = FIND(STATE::ORDERS,\"ORD_SIZE\",0,ORDER_ID);\
CUM_SIZE = FIND(STATE::ORDERS,\"CUM_SIZE\",0,ORDER_ID);\
CUM_VALUE = FIND(STATE::ORDERS,\"CUM_VALUE\",0.0,ORDER_ID);\
\
LEAVES_SIZE = SIZE;\
\
MSG_COUNT += 1;\
\
if (ORDSTATUS ==\"NEW\") {\
	ARRIVAL_TIME = (TIMESTAMP);\
	ARRIVAL_BID = BID_PRICE;\
	ARRIVAL_ASK = ASK_PRICE;\
	ARRIVAL_MKT_ACC_SIZE = MKT_ACC_SIZE;\
	ARRIVAL_MKT_ACC_VALUE = MKT_ACC_VALUE;\
	ORD_SIZE = SIZE;\
	NEW_COUNT += 1;\
}\
else if (ORDSTATUS ==\"REPLACE\") {\
	REPLACE_COUNT += 1;\
	ORD_SIZE = SIZE;\
}\
else if (ORDSTATUS == \"FILL\" ) {\
	CUM_SIZE += FILL_SIZE;\
	CUM_VALUE += EXEC_PRICE * FILL_SIZE;\
	FILL_COUNT += 1;\
	if (CUM_SIZE ==ORD_SIZE) {\
		COMPLETION_TIME = (TIMESTAMP);\
	}	\
}\
else if (ORDSTATUS == \"CANCEL\") {\
	COMPLETION_TIME = (TIMESTAMP);\
	CANCEL_COUNT += 1;\
}\
\
if (CUM_SIZE > 0) {\
	AVG_PRICE = CUM_VALUE / CUM_SIZE;\
}\
\
if (COMPLETION_TIME > 0) {\
	DURATION = NSECTIME_TO_LONG(COMPLETION_TIME) - NSECTIME_TO_LONG(ARRIVAL_TIME);\
	DURATION_MILLIS = DURATION / 1000000;\
}")
NODE_42_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_42_BREAKPOINT_INPUT_PINS = IN
NODE_42_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_42_BREAKPOINT_OUTPUT_PINS = OUT
NODE_42_EP_PARAMETERS_FLAG = -2
NODE_42_NAME = arrival_and_msg_counts
NODE_42_SOURCE =  NODE_39
NODE_42_X = 1388
NODE_42_Y = 5004.667
NODE_46 = PER_TICK_SCRIPT(SCRIPT="double EBBO_MID = (BID_PRICE + ASK_PRICE)/2;\
double QUOTED_SPREAD = ASK_PRICE - BID_PRICE;\
\
double EFFECTIVE_SPREAD = NAN();\
double EFFECTIVE_QUOTED_SPREAD_RATIO = NAN();\
double PRICE_IMPROVED = 0.0;\
double PRICE_IMPROVED_PCNT = 0.0;\
double PRICE_IMPROVED_VALUE = 0.0;\
long AT_OR_BETTER_QTY = 0;\
long AT_OR_BETTER_COUNT = 0;\
\
double CUM_PRICE_IMPROVED_VALUE = 0.0;\
long CUM_AT_OR_BETTER_QTY = 0;\
long CUM_AT_OR_BETTER_COUNT  = 0;\
\
double ORDER_VWAP = NAN();\
double PARTICIPATION = NAN();\
double MKT_INTERVAL_VWAP = NAN();\
\
if (FILL_SIZE > 0) {\
	if (SIDE ==\"BUY\") {\
		EFFECTIVE_SPREAD = 2*(EXEC_PRICE - EBBO_MID);\
		PRICE_IMPROVED = ASK_PRICE - EXEC_PRICE;\
		PRICE_IMPROVED_PCNT = PRICE_IMPROVED / ASK_PRICE;\
	}\
	else {\
		EFFECTIVE_SPREAD = 2*(EBBO_MID - EXEC_PRICE);\
		PRICE_IMPROVED = EXEC_PRICE - BID_PRICE;\
		PRICE_IMPROVED_PCNT = PRICE_IMPROVED / BID_PRICE;\
	}\
	PRICE_IMPROVED_VALUE = PRICE_IMPROVED * FILL_SIZE;\
	if (QUOTED_SPREAD > 0) {\
		EFFECTIVE_QUOTED_SPREAD_RATIO = EFFECTIVE_SPREAD/QUOTED_SPREAD;\
	}\
	if(PRICE_IMPROVED >=0) {\
		AT_OR_BETTER_QTY = FILL_SIZE;\
		AT_OR_BETTER_COUNT = 1;\
	}\
}\
\
CUM_PRICE_IMPROVED_VALUE = FIND(STATE::ORDERS,\"CUM_PRICE_IMPROVED_VALUE\",0.0,ORDER_ID);\
CUM_AT_OR_BETTER_QTY = FIND(STATE::ORDERS,\"CUM_AT_OR_BETTER_QTY\",0,ORDER_ID);\
CUM_AT_OR_BETTER_COUNT  = FIND(STATE::ORDERS,\"CUM_AT_OR_BETTER_COUNT\",0,ORDER_ID);\
\
CUM_PRICE_IMPROVED_VALUE += PRICE_IMPROVED_VALUE;\
CUM_AT_OR_BETTER_QTY += AT_OR_BETTER_QTY;\
CUM_AT_OR_BETTER_COUNT  +=  + AT_OR_BETTER_COUNT;\
\
if (CUM_SIZE > 0) {\
	ORDER_VWAP = CUM_VALUE/CUM_SIZE;\
	MKT_INTERVAL_VWAP = (FILL_SIZE + MKT_ACC_SIZE - ARRIVAL_MKT_ACC_SIZE) / ((EXEC_PRICE * FILL_SIZE) + MKT_ACC_VALUE - ARRIVAL_MKT_ACC_VALUE);\
	PARTICIPATION = CUM_SIZE / (FILL_SIZE + MKT_ACC_SIZE);\
}")
NODE_46_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_46_BREAKPOINT_INPUT_PINS = IN
NODE_46_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_46_BREAKPOINT_OUTPUT_PINS = OUT
NODE_46_EP_PARAMETERS_FLAG = -2
NODE_46_NAME = exec_stats
NODE_46_SOURCE =  NODE_42
NODE_46_X = 1518.667
NODE_46_Y = 5346
NODE_56 = UPDATE_TICK_SETS(TICK_SETS="STATE::ORDERS")
NODE_56_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_56_BREAKPOINT_INPUT_PINS = IN
NODE_56_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_56_BREAKPOINT_OUTPUT_PINS = OUT
NODE_56_EP_PARAMETERS_FLAG = -2
NODE_56_NAME = ord
NODE_56_SOURCE =  NODE_101
NODE_56_X = 1042
NODE_56_Y = 6772.667
NODE_69 = PASSTHROUGH
NODE_69_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_69_BREAKPOINT_INPUT_PINS = IN
NODE_69_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_69_BREAKPOINT_OUTPUT_PINS = OUT
NODE_69_EP_PARAMETERS_FLAG = -2
NODE_69_NAME = output
NODE_69_SOURCE =  NODE_56
NODE_69_X = 1029
NODE_69_Y = 7083.333
NODE_86 = PER_TICK_SCRIPT(SCRIPT="long TARGET_QTY = 0;\
long AVAILABLE_QTY = 0;\
double TARGET_PRICE = NAN();\
double TOUCH_FILL_RATE = NAN();\
double OVERSIZED_FILL_RATE = NAN();\
double PRICE_IMPROV_VS_EXP = NAN();\
\
long LOCAL::LEAVES_QTY = ORD_SIZE;\
long LOCAL::NEXT_QTY = 0;\
double LOCAL::TARGET_VALUE = 0.0;\
\
if (ORDSTYLE ==\"A\") {\
	if (SIDE==\"BUY\") {\
		if (ASK_PRICE1 <= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,ASK_SIZE1);\
			LOCAL::TARGET_VALUE += ASK_PRICE1 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += ASK_SIZE1;\
		}\
		if (ASK_PRICE2 <= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,ASK_SIZE2);\
			LOCAL::TARGET_VALUE += ASK_PRICE2 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += ASK_SIZE2;\
		}\
		if (ASK_PRICE3 <= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,ASK_SIZE3);\
			LOCAL::TARGET_VALUE += ASK_PRICE3 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += ASK_SIZE3;\
		}\
		if (ASK_PRICE4 <= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,ASK_SIZE4);\
			LOCAL::TARGET_VALUE += ASK_PRICE4 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += ASK_SIZE4;\
		}\
		if (ASK_PRICE5 <= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,ASK_SIZE5);\
			LOCAL::TARGET_VALUE += ASK_PRICE5 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += ASK_SIZE5;\
		}\
	}\
	else {\
		if (BID_PRICE1 >= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,BID_SIZE1);\
			LOCAL::TARGET_VALUE += BID_PRICE1 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += BID_SIZE1;\
		}\
		if (BID_PRICE2 >= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,BID_SIZE2);\
			LOCAL::TARGET_VALUE += BID_PRICE2 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += BID_SIZE2;\
		}\
		if (BID_PRICE3 >= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,BID_SIZE5);\
			LOCAL::TARGET_VALUE += BID_PRICE3 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += BID_SIZE3;\
		}\
		if (BID_PRICE4 >= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,BID_SIZE4);\
			LOCAL::TARGET_VALUE += BID_PRICE4 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += BID_SIZE4;\
		}\
		if (BID_PRICE5 >= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,BID_SIZE5);\
			LOCAL::TARGET_VALUE += BID_PRICE5 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += BID_SIZE5;\
		}\
	}\
	if (TARGET_QTY>0) {\
		TARGET_PRICE = LOCAL::TARGET_VALUE / TARGET_QTY;\
		TOUCH_FILL_RATE = MIN(1,FILL_SIZE/TARGET_QTY);\
		OVERSIZED_FILL_RATE = FILL_SIZE/TARGET_QTY;\
	}\
	if (ORDER_VWAP>0) {\
		PRICE_IMPROV_VS_EXP = (TARGET_PRICE - ORDER_VWAP)/ORDER_VWAP;\
	}\
\
\
}")
NODE_86_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_86_BREAKPOINT_INPUT_PINS = IN
NODE_86_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_86_BREAKPOINT_OUTPUT_PINS = OUT
NODE_86_EP_PARAMETERS_FLAG = -2
NODE_86_NAME = aggr_stats
NODE_86_SOURCE =  NODE_46
NODE_86_X = 1326
NODE_86_Y = 5687.333
NODE_89 = PER_TICK_SCRIPT(SCRIPT="long QTY_AHEAD = 0;\
long QTY_TRADED_AHEAD = 0;\
string PASSIVE_PERF = \"\";\
long LOCAL::MKT_INTERVAL_SIZE = 0;\
QTY_AHEAD = FIND(STATE::ORDERS,\"QTY_AHEAD\",0,ORDER_ID);\
\
\
if (ORDSTYLE ==\"P\") {\
	if (ORDSTATUS ==\"NEW\") {\
		if (SIDE==\"SELL\") {\
			if (LIMIT_PRICE >= ASK_PRICE1) {\
				QTY_AHEAD = ASK_SIZE1;\
			}\
			if (LIMIT_PRICE >= ASK_PRICE2) {\
				QTY_AHEAD += ASK_SIZE2;\
			}\
			if (LIMIT_PRICE >= ASK_PRICE3) {\
				QTY_AHEAD += ASK_SIZE3;\
			}\
			if (LIMIT_PRICE >= ASK_PRICE4) {\
				QTY_AHEAD += ASK_SIZE4;\
			}\
			if (LIMIT_PRICE >= ASK_PRICE5) {\
				QTY_AHEAD += ASK_SIZE5;\
			}\
		}\
		else {\
			if (LIMIT_PRICE <= BID_PRICE1) {\
				QTY_AHEAD = BID_SIZE1;\
			}\
			if (LIMIT_PRICE <= BID_PRICE2) {\
				QTY_AHEAD += BID_SIZE2;\
			}\
			if (LIMIT_PRICE <= BID_PRICE3) {\
				QTY_AHEAD += BID_SIZE3;\
			}\
			if (LIMIT_PRICE <= BID_PRICE4) {\
				QTY_AHEAD += BID_SIZE4;\
			}\
			if (LIMIT_PRICE <= BID_PRICE5) {\
				QTY_AHEAD += BID_SIZE5;\
			}\
		}\
	}\
	if (CUM_SIZE > 0) {\
		LOCAL::MKT_INTERVAL_SIZE = FILL_SIZE + MKT_ACC_SIZE - ARRIVAL_MKT_ACC_SIZE;\
		QTY_TRADED_AHEAD = (LOCAL::MKT_INTERVAL_SIZE - QTY_AHEAD) - CUM_SIZE;\
	}\
}")
NODE_89_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
NODE_89_BREAKPOINT_INPUT_PINS = IN
NODE_89_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
NODE_89_BREAKPOINT_OUTPUT_PINS = OUT
NODE_89_EP_PARAMETERS_FLAG = -2
NODE_89_NAME = passive_stats
NODE_89_SOURCE =  NODE_86
NODE_89_X = 1380.667
NODE_89_Y = 6028.667
one_to_many_symbol_mapping = 0
PROCESS_DBS_CONCURENTLY = 1
QUERY_BATCH_SIZE = 0
ROOT = NUM_TICKS(BUCKET_INTERVAL=1)
ROOT_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
ROOT_BREAKPOINT_INPUT_PINS = IN
ROOT_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
ROOT_BREAKPOINT_OUTPUT_PINS = OUT
ROOT_EP_PARAMETERS_FLAG = -2
ROOT_SOURCE =  NODE_104
ROOT_X = 1016
ROOT_Y = 7939
RunningQuery = 1
SECURITY = eval(THIS::primary_symlist) 0 No
SECURITY = HSBA/L 0 No
SHOW_TEMPLATE = 
START = 20210625000000000
start_expression = TODAY()
TYPE = GRAPH

[ord_with_book_and_trd]
COMMENT = 
CPU_NUMBER = 4
DB_HINT_FOR_PROCESSING_HOST = 
END = 20210626000000000
end_expression = DATEADD("DAY",1,TODAY())
graph_reuse = 1
NESTED_OTQS_USE_ONLY_SINKS_FOR_OUTPUT = TRUE
one_to_many_symbol_mapping = 0
PROCESS_DBS_CONCURENTLY = 1
QUERY_BATCH_SIZE = 0
ROOT = NUM_TICKS(BUCKET_INTERVAL=1)
ROOT_BREAKPOINT_INPUT_PIN_IN = 0 0 134217728 0 0
ROOT_BREAKPOINT_INPUT_PINS = IN
ROOT_BREAKPOINT_OUTPUT_PIN_OUT = 0 0 134217728 0 0
ROOT_BREAKPOINT_OUTPUT_PINS = OUT
ROOT_EP_PARAMETERS_FLAG = -2
ROOT_X = 780.167
ROOT_Y = 732.943
RunningQuery = 1
SECURITY = eval(THIS::primary_symlist) 0 No
SECURITY = HSBA/L 0 No
SECURITY = eval(THIS::primary_symlist) 0 No
SECURITY = AM/P 0 No
SHOW_TEMPLATE = 
START = 20210625000000000
start_expression = TODAY()
TYPE = GRAPH

[order_history]
COMMENT = 
CPU_NUMBER = 4
DB_HINT_FOR_PROCESSING_HOST = 
END = 20210626000000000
end_expression = NOW()
graph_reuse = 1
NESTED_OTQS_USE_ONLY_SINKS_FOR_OUTPUT = TRUE
NODE_139 = TABLE(FIELDS="BID_PRICE double, ASK_PRICE double,\
BID_PRICE1 double, ASK_PRICE1 double,\
BID_PRICE2 double, ASK_PRICE2 double,\
BID_PRICE3 double, ASK_PRICE3 double,\
BID_PRICE4 double, ASK_PRICE4 double,\
BID_PRICE5 double, ASK_PRICE5 double,\
BID_SIZE1 long, ASK_SIZE1 long,\
BID_SIZE2 long, ASK_SIZE2 long,\
BID_SIZE3 long, ASK_SIZE3 long,\
BID_SIZE4 long, ASK_SIZE4 long,\
BID_SIZE5 long, ASK_SIZE5 long,\
MKT_ACC_SIZE double,\
MKT_ACC_VALUE double,\
MKT_LAST_PRICE double,\
MKT_LAST_SIZE double",KEEP_INPUT_FIELDS=true)
NODE_139_EP_PARAMETERS_FLAG = -2
NODE_139_SINK =  NODE_187
NODE_139_X = 1899.500
NODE_139_Y = 4312
NODE_146 = DECLARE_STATE_VARIABLES(SCOPE=ALL_OUTPUTS,VARIABLES="TICK_SET_UNORDERED(LATEST_TICK,1000,SYM) TRADES")
NODE_146_EP_PARAMETERS_FLAG = -2
NODE_146_NAME = trades_tickset
NODE_146_SOURCE =  NODE_176
NODE_146_X = 790.167
NODE_146_Y = 2890.667
NODE_153 = UPDATE_TICK_SETS(TICK_SETS="STATE::TRADES")
NODE_153_EP_PARAMETERS_FLAG = -2
NODE_153_SINK =  NODE_156
NODE_153_SOURCE =  NODE_146
NODE_153_X = 790.167
NODE_153_Y = 3293.333
NODE_156 = WHERE_CLAUSE(WHERE=false)
NODE_156_EP_PARAMETERS_FLAG = -2
NODE_156_NAME = trd
NODE_156_SINK =  NODE_172.IF.
NODE_156_X = 1272.833
NODE_156_Y = 3696
NODE_17 = PASSTHROUGH
NODE_172 = MERGE
NODE_172_EP_PARAMETERS_FLAG = -2
NODE_172_SINK =  NODE_139
NODE_172_SOURCE =  NODE_175..IF NODE_37
NODE_172_X = 1896.833
NODE_172_Y = 3942.667
NODE_175 = WHERE_CLAUSE(WHERE=false)
NODE_175_EP_PARAMETERS_FLAG = -2
NODE_175_NAME = book
NODE_175_SOURCE =  NODE_227
NODE_175_X = 1899.500
NODE_175_Y = 3696
NODE_176 = ADD_FIELD(FIELD=SYM,VALUE=_SYMBOL_NAME)
NODE_176_EP_PARAMETERS_FLAG = -2
NODE_176_SOURCE =  NODE_70
NODE_176_X = 790.167
NODE_176_Y = 2610.667
NODE_17_EP_PARAMETERS_FLAG = -2
NODE_17_NAME = ord
NODE_17_TICK_TYPE = S_ORDERS::ORD
NODE_17_X = 2558.167
NODE_17_Y = 2610.667
NODE_187 = UPDATE_FROM_TICK_SET(TICK_SET="STATE::TRADES")
NODE_187_EP_PARAMETERS_FLAG = -2
NODE_187_NAME = update_from_trades
NODE_187_SINK =  NODE_228
NODE_187_X = 1899.500
NODE_187_Y = 4714.667
NODE_191 = PASSTHROUGH
NODE_191_EP_PARAMETERS_FLAG = -2
NODE_191_NAME = output
NODE_191_X = 1896.833
NODE_191_Y = 8224
NODE_192 = UPDATE_TICK_SETS(TICK_SETS="STATE::ORDERS")
NODE_192_EP_PARAMETERS_FLAG = -2
NODE_192_NAME = ord
NODE_192_SINK =  NODE_211
NODE_192_X = 1896.833
NODE_192_Y = 7138.667
NODE_193 = PASSTHROUGH(FIELDS="BID_PRICE1,ASK_PRICE1,BID_PRICE2,ASK_PRICE2,BID_PRICE3,ASK_PRICE3,BID_PRICE4,ASK_PRICE4,BID_PRICE5,ASK_PRICE5,\
BID_SIZE1,ASK_SIZE1,BID_SIZE2,ASK_SIZE2,BID_SIZE3,ASK_SIZE3,BID_SIZE4,ASK_SIZE4,BID_SIZE5,ASK_SIZE5,\
MKT_LAST_VALUE",DROP_FIELDS=true)
NODE_193_EP_PARAMETERS_FLAG = -2
NODE_193_NAME = drop_fields
NODE_193_SINK =  NODE_192
NODE_193_X = 1896.833
NODE_193_Y = 6858.667
NODE_194 = PER_TICK_SCRIPT(SCRIPT="long QTY_AHEAD = 0;\
long QTY_TRADED_AHEAD = 0;\
string PASSIVE_PERF = \"\";\
long LOCAL::MKT_INTERVAL_SIZE = 0;\
QTY_AHEAD = FIND(STATE::ORDERS,\"QTY_AHEAD\",0,ORDER_ID);\
\
\
if (ORDSTYLE ==\"P\") {\
	if (ORDSTATUS ==\"NEW\") {\
		if (SIDE==\"SELL\") {\
			if (LIMIT_PRICE >= ASK_PRICE1) {\
				QTY_AHEAD = ASK_SIZE1;\
			}\
			if (LIMIT_PRICE >= ASK_PRICE2) {\
				QTY_AHEAD += ASK_SIZE2;\
			}\
			if (LIMIT_PRICE >= ASK_PRICE3) {\
				QTY_AHEAD += ASK_SIZE3;\
			}\
			if (LIMIT_PRICE >= ASK_PRICE4) {\
				QTY_AHEAD += ASK_SIZE4;\
			}\
			if (LIMIT_PRICE >= ASK_PRICE5) {\
				QTY_AHEAD += ASK_SIZE5;\
			}\
		}\
		else {\
			if (LIMIT_PRICE <= BID_PRICE1) {\
				QTY_AHEAD = BID_SIZE1;\
			}\
			if (LIMIT_PRICE <= BID_PRICE2) {\
				QTY_AHEAD += BID_SIZE2;\
			}\
			if (LIMIT_PRICE <= BID_PRICE3) {\
				QTY_AHEAD += BID_SIZE3;\
			}\
			if (LIMIT_PRICE <= BID_PRICE4) {\
				QTY_AHEAD += BID_SIZE4;\
			}\
			if (LIMIT_PRICE <= BID_PRICE5) {\
				QTY_AHEAD += BID_SIZE5;\
			}\
		}\
	}\
	if (CUM_SIZE > 0) {\
		LOCAL::MKT_INTERVAL_SIZE = FILL_SIZE + MKT_ACC_SIZE - ARRIVAL_MKT_ACC_SIZE;\
		QTY_TRADED_AHEAD = (LOCAL::MKT_INTERVAL_SIZE - QTY_AHEAD) - CUM_SIZE;\
	}\
}")
NODE_194_EP_PARAMETERS_FLAG = -2
NODE_194_NAME = passive_stats
NODE_194_SINK =  NODE_193
NODE_194_X = 1896.833
NODE_194_Y = 6578.667
NODE_195 = PER_TICK_SCRIPT(SCRIPT="long TARGET_QTY = 0;\
long AVAILABLE_QTY = 0;\
double TARGET_PRICE = NAN();\
double TOUCH_FILL_RATE = NAN();\
double OVERSIZED_FILL_RATE = NAN();\
double PRICE_IMPROV_VS_EXP = NAN();\
\
long LOCAL::LEAVES_QTY = ORD_SIZE;\
long LOCAL::NEXT_QTY = 0;\
double LOCAL::TARGET_VALUE = 0.0;\
\
if (ORDSTYLE ==\"A\") {\
	if (SIDE==\"BUY\") {\
		if (ASK_PRICE1 <= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,ASK_SIZE1);\
			LOCAL::TARGET_VALUE += ASK_PRICE1 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += ASK_SIZE1;\
		}\
		if (ASK_PRICE2 <= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,ASK_SIZE2);\
			LOCAL::TARGET_VALUE += ASK_PRICE2 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += ASK_SIZE2;\
		}\
		if (ASK_PRICE3 <= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,ASK_SIZE3);\
			LOCAL::TARGET_VALUE += ASK_PRICE3 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += ASK_SIZE3;\
		}\
		if (ASK_PRICE4 <= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,ASK_SIZE4);\
			LOCAL::TARGET_VALUE += ASK_PRICE4 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += ASK_SIZE4;\
		}\
		if (ASK_PRICE5 <= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,ASK_SIZE5);\
			LOCAL::TARGET_VALUE += ASK_PRICE5 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += ASK_SIZE5;\
		}\
	}\
	else {\
		if (BID_PRICE1 >= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,BID_SIZE1);\
			LOCAL::TARGET_VALUE += BID_PRICE1 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += BID_SIZE1;\
		}\
		if (BID_PRICE2 >= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,BID_SIZE2);\
			LOCAL::TARGET_VALUE += BID_PRICE2 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += BID_SIZE2;\
		}\
		if (BID_PRICE3 >= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,BID_SIZE5);\
			LOCAL::TARGET_VALUE += BID_PRICE3 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += BID_SIZE3;\
		}\
		if (BID_PRICE4 >= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,BID_SIZE4);\
			LOCAL::TARGET_VALUE += BID_PRICE4 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += BID_SIZE4;\
		}\
		if (BID_PRICE5 >= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,BID_SIZE5);\
			LOCAL::TARGET_VALUE += BID_PRICE5 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += BID_SIZE5;\
		}\
	}\
	if (TARGET_QTY>0) {\
		TARGET_PRICE = LOCAL::TARGET_VALUE / TARGET_QTY;\
		TOUCH_FILL_RATE = MIN(1,FILL_SIZE/TARGET_QTY);\
		OVERSIZED_FILL_RATE = FILL_SIZE/TARGET_QTY;\
	}\
	if (ORDER_VWAP>0) {\
		PRICE_IMPROV_VS_EXP = (TARGET_PRICE - ORDER_VWAP)/ORDER_VWAP;\
	}\
\
\
}")
NODE_195_EP_PARAMETERS_FLAG = -2
NODE_195_NAME = aggr_stats
NODE_195_SINK =  NODE_194
NODE_195_X = 1896.833
NODE_195_Y = 6268
NODE_196 = PER_TICK_SCRIPT(SCRIPT="double EBBO_MID = (BID_PRICE + ASK_PRICE)/2;\
double QUOTED_SPREAD = ASK_PRICE - BID_PRICE;\
\
double EFFECTIVE_SPREAD = NAN();\
double EFFECTIVE_QUOTED_SPREAD_RATIO = NAN();\
double PRICE_IMPROVED = 0.0;\
double PRICE_IMPROVED_PCNT = 0.0;\
double PRICE_IMPROVED_VALUE = 0.0;\
long AT_OR_BETTER_QTY = 0;\
long AT_OR_BETTER_COUNT = 0;\
\
double CUM_PRICE_IMPROVED_VALUE = 0.0;\
long CUM_AT_OR_BETTER_QTY = 0;\
long CUM_AT_OR_BETTER_COUNT  = 0;\
\
double ORDER_VWAP = NAN();\
double PARTICIPATION = NAN();\
double MKT_INTERVAL_VWAP = NAN();\
\
double	PCNT_SLIPPAGE_TO_ARRIVAL = NAN();\
double	PCNT_SLIPPAGE_TO_INTERVAL_VWAP = NAN();\
\
\
\
if (FILL_SIZE > 0) {\
	if (SIDE ==\"BUY\") {\
		EFFECTIVE_SPREAD = 2*(EXEC_PRICE - EBBO_MID);\
		PRICE_IMPROVED = ASK_PRICE - EXEC_PRICE;\
		PRICE_IMPROVED_PCNT = PRICE_IMPROVED / ASK_PRICE;\
	}\
	else {\
		EFFECTIVE_SPREAD = 2*(EBBO_MID - EXEC_PRICE);\
		PRICE_IMPROVED = EXEC_PRICE - BID_PRICE;\
		PRICE_IMPROVED_PCNT = PRICE_IMPROVED / BID_PRICE;\
	}\
	PRICE_IMPROVED_VALUE = PRICE_IMPROVED * FILL_SIZE;\
	if (QUOTED_SPREAD > 0) {\
		EFFECTIVE_QUOTED_SPREAD_RATIO = EFFECTIVE_SPREAD/QUOTED_SPREAD;\
	}\
	if(PRICE_IMPROVED >=0) {\
		AT_OR_BETTER_QTY = FILL_SIZE;\
		AT_OR_BETTER_COUNT = 1;\
	}\
}\
\
CUM_PRICE_IMPROVED_VALUE = FIND(STATE::ORDERS,\"CUM_PRICE_IMPROVED_VALUE\",0.0,ORDER_ID);\
CUM_AT_OR_BETTER_QTY = FIND(STATE::ORDERS,\"CUM_AT_OR_BETTER_QTY\",0,ORDER_ID);\
CUM_AT_OR_BETTER_COUNT  = FIND(STATE::ORDERS,\"CUM_AT_OR_BETTER_COUNT\",0,ORDER_ID);\
\
CUM_PRICE_IMPROVED_VALUE += PRICE_IMPROVED_VALUE;\
CUM_AT_OR_BETTER_QTY += AT_OR_BETTER_QTY;\
CUM_AT_OR_BETTER_COUNT  +=  + AT_OR_BETTER_COUNT;\
\
if (CUM_SIZE > 0) {\
	ORDER_VWAP = CUM_VALUE/CUM_SIZE;\
	MKT_INTERVAL_VWAP = ((EXEC_PRICE * FILL_SIZE) + MKT_ACC_VALUE - ARRIVAL_MKT_ACC_VALUE) / (FILL_SIZE + MKT_ACC_SIZE - ARRIVAL_MKT_ACC_SIZE);\
	PARTICIPATION = CUM_SIZE / (FILL_SIZE + MKT_ACC_SIZE - ARRIVAL_MKT_ACC_SIZE);\
	PCNT_SLIPPAGE_TO_INTERVAL_VWAP = ORDER_VWAP / MKT_INTERVAL_VWAP - 1;\
	if (SIDE ==\"BUY\") {\
			PCNT_SLIPPAGE_TO_ARRIVAL = ORDER_VWAP / ARRIVAL_BID -1;\
	}\
	else {\
			PCNT_SLIPPAGE_TO_ARRIVAL = ORDER_VWAP / ARRIVAL_ASK -1;\
	}\
}")
NODE_196_EP_PARAMETERS_FLAG = -2
NODE_196_NAME = exec_stats
NODE_196_SINK =  NODE_195
NODE_196_X = 1899.500
NODE_196_Y = 5926.667
NODE_197 = PER_TICK_SCRIPT(SCRIPT="nsectime ARRIVAL_TIME = 0;\
nsectime COMPLETION_TIME = 0;\
double ARRIVAL_BID = NAN();\
double ARRIVAL_ASK = NAN();\
double ARRIVAL_MKT_ACC_SIZE = 0.0;\
double ARRIVAL_MKT_ACC_VALUE = NAN();\
\
\
long MSG_COUNT = 0;\
long REPLACE_COUNT = 0;\
long ORD_SIZE = 0;\
long CUM_SIZE = 0;\
long LEAVES_SIZE = 0;\
long FILL_COUNT = 0;\
long CANCEL_COUNT = 0;\
long NEW_COUNT = 0;\
double CUM_VALUE = 0.0;\
double AVG_PRICE = NAN();\
long DURATION = 0;\
double DURATION_MILLIS = NAN();\
\
BID_PRICE = BID_PRICE1;\
ASK_PRICE = ASK_PRICE1;\
\
\
ARRIVAL_TIME = FIND(STATE::ORDERS,\"ARRIVAL_TIME\",0,ORDER_ID);\
COMPLETION_TIME = FIND(STATE::ORDERS,\"COMPLETION_TIME\",0,ORDER_ID);\
\
ARRIVAL_BID = FIND(STATE::ORDERS,\"ARRIVAL_BID\",NAN(),ORDER_ID);\
ARRIVAL_ASK = FIND(STATE::ORDERS,\"ARRIVAL_ASK\",NAN(),ORDER_ID);\
\
ARRIVAL_MKT_ACC_SIZE = FIND(STATE::ORDERS,\"ARRIVAL_MKT_ACC_SIZE\",NAN(),ORDER_ID);\
ARRIVAL_MKT_ACC_VALUE = FIND(STATE::ORDERS,\"ARRIVAL_MKT_ACC_VALUE\",NAN(),ORDER_ID);\
\
\
\
MSG_COUNT = FIND(STATE::ORDERS,\"MSG_COUNT\",0,ORDER_ID);\
REPLACE_COUNT = FIND(STATE::ORDERS,\"REPLACE_COUNT\",0,ORDER_ID);\
FILL_COUNT = FIND(STATE::ORDERS,\"FILL_COUNT\",0,ORDER_ID);\
CANCEL_COUNT = FIND(STATE::ORDERS,\"CANCEL_COUNT\",0,ORDER_ID);\
NEW_COUNT = FIND(STATE::ORDERS,\"NEW_COUNT\",0,ORDER_ID);\
\
ORD_SIZE = FIND(STATE::ORDERS,\"ORD_SIZE\",0,ORDER_ID);\
CUM_SIZE = FIND(STATE::ORDERS,\"CUM_SIZE\",0,ORDER_ID);\
CUM_VALUE = FIND(STATE::ORDERS,\"CUM_VALUE\",0.0,ORDER_ID);\
\
LEAVES_SIZE = SIZE;\
\
MSG_COUNT += 1;\
\
if (ORDSTATUS ==\"NEW\") {\
	ARRIVAL_TIME = (TIMESTAMP);\
	ARRIVAL_BID = BID_PRICE;\
	ARRIVAL_ASK = ASK_PRICE;\
	ARRIVAL_MKT_ACC_SIZE = MKT_ACC_SIZE;\
	ARRIVAL_MKT_ACC_VALUE = MKT_ACC_VALUE;\
	ORD_SIZE = SIZE;\
	NEW_COUNT += 1;\
}\
else if (ORDSTATUS ==\"REPLACE\") {\
	REPLACE_COUNT += 1;\
	ORD_SIZE = SIZE;\
}\
else if (ORDSTATUS == \"FILL\" ) {\
	CUM_SIZE += FILL_SIZE;\
	CUM_VALUE += EXEC_PRICE * FILL_SIZE;\
	FILL_COUNT += 1;\
	if (CUM_SIZE ==ORD_SIZE) {\
		COMPLETION_TIME = (TIMESTAMP);\
	}	\
}\
else if (ORDSTATUS == \"CANCEL\") {\
	COMPLETION_TIME = (TIMESTAMP);\
	CANCEL_COUNT += 1;\
}\
\
if (CUM_SIZE > 0) {\
	AVG_PRICE = CUM_VALUE / CUM_SIZE;\
}\
\
if (COMPLETION_TIME > 0) {\
	DURATION = NSECTIME_TO_LONG(COMPLETION_TIME) - NSECTIME_TO_LONG(ARRIVAL_TIME);\
	DURATION_MILLIS = DURATION / 1000000;\
}")
NODE_197_EP_PARAMETERS_FLAG = -2
NODE_197_NAME = arrival_and_msg_counts
NODE_197_SINK =  NODE_196
NODE_197_X = 1896.833
NODE_197_Y = 5585.333
NODE_198 = DECLARE_STATE_VARIABLES(VARIABLES="TICK_SET_UNORDERED(LATEST_TICK,100,ORDER_ID) ORDERS")
NODE_198_EP_PARAMETERS_FLAG = -2
NODE_198_NAME = declare_orders_state
NODE_198_SINK =  NODE_197
NODE_198_X = 1896.833
NODE_198_Y = 5274.667
NODE_204 = WHERE_CLAUSE(WHERE="ORDER_ID = \"$ORDER_ID\"")
NODE_204_EP_PARAMETERS_FLAG = -2
NODE_204_SOURCE =  NODE_17
NODE_204_X = 2560.833
NODE_204_Y = 2890.667
NODE_211 = TABLE(FIELDS="SYM,\
BID_PRICE double, \
ASK_PRICE double,\
ORDER_ID string[32],\
ORDSTYLE string[1],\
ORDSTATUS string,\
SEQ_ID long,\
SIDE string[4],\
ORD_SIZE long,\
LIMIT_PRICE double,\
EXEC_PRICE double,\
FILL_SIZE long,\
CUM_SIZE long,\
LEAVES_SIZE long,\
CUM_VALUE long,\
ORDER_VWAP double,\
CCYMULTIPLIER double,\
ALGO string[1],\
ISIN string[13],\
MIC string[4],\
VENUE string[7],\
CCY string[3],\
MKT_LAST_PRICE double,\
MKT_LAST_SIZE long,\
MKT_ACC_SIZE long,\
MKT_ACC_VALUE double,\
ARRIVAL_TIME nsectime,\
COMPLETION_TIME nsectime,\
ARRIVAL_BID double,\
ARRIVAL_ASK double,\
ARRIVAL_MKT_ACC_SIZE long,\
ARRIVAL_MKT_ACC_VALUE double,\
MSG_COUNT long,\
NEW_COUNT long,\
REPLACE_COUNT long,\
FILL_COUNT long,\
CANCEL_COUNT long,\
DURATION long,\
DURATION_MILLIS double,\
EBBO_MID double,\
QUOTED_SPREAD double,\
EFFECTIVE_SPREAD double,\
EFFECTIVE_QUOTED_SPREAD_RATIO double,\
PRICE_IMPROVED double,\
PRICE_IMPROVED_PCNT double,\
PRICE_IMPROVED_VALUE double,\
AT_OR_BETTER_QTY long,\
AT_OR_BETTER_COUNT long,\
CUM_PRICE_IMPROVED_VALUE double,\
CUM_AT_OR_BETTER_QTY long,\
CUM_AT_OR_BETTER_COUNT long,\
PARTICIPATION double,\
MKT_INTERVAL_VWAP double,\
PCNT_SLIPPAGE_TO_ARRIVAL double,\
PCNT_SLIPPAGE_TO_INTERVAL_VWAP double,\
TARGET_QTY long,\
AVAILABLE_QTY long,\
TARGET_PRICE double,\
TOUCH_FILL_RATE double,\
OVERSIZED_FILL_RATE double,\
PRICE_IMPROV_VS_EXP double,\
QTY_AHEAD long,\
QTY_TRADED_AHEAD long,\
PASSIVE_PERF string")
NODE_211_EP_PARAMETERS_FLAG = -2
NODE_211_NAME = standardize_schema
NODE_211_SINK =  NODE_214
NODE_211_X = 1896.833
NODE_211_Y = 7541.333
NODE_214 = PER_TICK_SCRIPT(SCRIPT="double PRICE_NEW_BUY = NAN();\
double PRICE_NEW_SELL = NAN();\
double PRICE_CANCEL = NAN();\
double PRICE_REPLACE = NAN();\
double PRICE_FILL_BUY = NAN();\
double PRICE_FILL_SELL = NAN();\
\
\
\
if (ORDSTATUS == \"NEW\") {\
	if (SIDE==\"BUY\") {\
		PRICE_NEW_BUY = LIMIT_PRICE;\
	}\
	else {\
		PRICE_NEW_SELL = LIMIT_PRICE;\
	}\
}\
else if (ORDSTATUS == \"CANCEL\") {\
	PRICE_CANCEL = LIMIT_PRICE;\
}\
else if (ORDSTATUS == \"REPLACE\") {\
	PRICE_REPLACE = LIMIT_PRICE;\
}\
else {\
	if (SIDE==\"BUY\") {\
		PRICE_FILL_BUY = EXEC_PRICE;\
	}\
	else {\
		PRICE_FILL_SELL = EXEC_PRICE;\
	}\
\
}")
NODE_214_EP_PARAMETERS_FLAG = -2
NODE_214_NAME = price_fields_for_display
NODE_214_SINK =  NODE_191
NODE_214_X = 1896.833
NODE_214_Y = 7944
NODE_215 = VIRTUAL_OB
NODE_215_EP_PARAMETERS_FLAG = -2
NODE_215_SOURCE =  NODE_223
NODE_215_X = 1859.500
NODE_215_Y = 604
NODE_216 = MERGE
NODE_216_BIND_SECURITY = eval(THIS::symlist_for_primary,"SYM=expr(_SYMBOL_NAME)") 0
NODE_216_EP_PARAMETERS_FLAG = -2
NODE_216_NAME = merge_across_venues_for_primary
NODE_216_SOURCE =  NODE_215
NODE_216_X = 1859.500
NODE_216_Y = 850.667
NODE_223 = ADD_FIELDS(FIELDS="ASK_SIZE long = 1, BID_SIZE long = 1")
NODE_223_EP_PARAMETERS_FLAG = -2
NODE_223_SOURCE =  NODE_66
NODE_223_X = 1859.500
NODE_223_Y = 390.667
NODE_224 = DECLARE_STATE_VARIABLES(SCOPE=ALL_OUTPUTS,VARIABLES="TICK_SET_UNORDERED(LATEST_TICK,1000,SYM) BOOK")
NODE_224_EP_PARAMETERS_FLAG = -2
NODE_224_NAME = book_tickset
NODE_224_SOURCE =  NODE_239
NODE_224_X = 1859.500
NODE_224_Y = 2890.667
NODE_227 = UPDATE_TICK_SETS(TICK_SETS="STATE::BOOK")
NODE_227_EP_PARAMETERS_FLAG = -2
NODE_227_SOURCE =  NODE_224
NODE_227_X = 1878.167
NODE_227_Y = 3293.333
NODE_228 = UPDATE_FROM_TICK_SET(TICK_SET="STATE::BOOK")
NODE_228_EP_PARAMETERS_FLAG = -2
NODE_228_NAME = update_from_book
NODE_228_SINK =  NODE_198
NODE_228_X = 1899.500
NODE_228_Y = 4994.667
NODE_229 = PASSTHROUGH(FIELDS="BID_PRICE1, ASK_PRICE1, BID_SIZE1, ASK_SIZE1")
NODE_229_EP_PARAMETERS_FLAG = -2
NODE_229_SOURCE =  NODE_234
NODE_229_X = 1859.500
NODE_229_Y = 1870.667
NODE_234 = OB_SNAPSHOT_FLAT(IS_RUNNING_AGGR=true,MAX_LEVELS=1)
NODE_234_EP_PARAMETERS_FLAG = -2
NODE_234_SOURCE =  NODE_216
NODE_234_X = 1859.500
NODE_234_Y = 1130.667
NODE_239 = ADD_FIELD(FIELD=SYM,VALUE=_SYMBOL_NAME)
NODE_239_EP_PARAMETERS_FLAG = -2
NODE_239_SOURCE =  NODE_229
NODE_239_X = 1859.500
NODE_239_Y = 2610.667
NODE_27 = MERGE(IDENTIFY_INPUT_TS=false)
NODE_27_BIND_SECURITY = eval(THIS::symlist_for_primary,"SYM=expr(_SYMBOL_NAME)") 0
NODE_27_EP_PARAMETERS_FLAG = -2
NODE_27_NAME = merge_across_venues_for_primary
NODE_27_SOURCE =  NODE_204..IF
NODE_27_X = 2539.500
NODE_27_Y = 3293.333
NODE_37 = PASSTHROUGH(FIELDS="ebbo.TIMESTAMP,ord.TIMESTAMP",DROP_FIELDS=true)
NODE_37_EP_PARAMETERS_FLAG = -2
NODE_37_NAME = ord
NODE_37_SOURCE =  NODE_27
NODE_37_X = 2520.833
NODE_37_Y = 3696
NODE_66 = PASSTHROUGH
NODE_66_EP_PARAMETERS_FLAG = -2
NODE_66_NAME = book
NODE_66_TICK_TYPE = MKTDATA::QTE
NODE_66_X = 1859.500
NODE_66_Y = 144
NODE_70 = COMPUTE(COMPUTE="SUM(INPUT_FIELD_NAME=\"SIZE\") MKT_ACC_SIZE,\
SUM(INPUT_FIELD_NAME=\"VALUE\") MKT_ACC_VALUE,\
LAST(INPUT_FIELD_NAME=\"PRICE\") MKT_LAST_PRICE,\
LAST(INPUT_FIELD_NAME=\"SIZE\") MKT_LAST_SIZE",IS_RUNNING_AGGR=true,APPEND_OUTPUT_FIELD_NAME=false)
NODE_70_EP_PARAMETERS_FLAG = -2
NODE_70_NAME = acc_size
NODE_70_SOURCE =  NODE_71
NODE_70_X = 792.833
NODE_70_Y = 1870.667
NODE_71 = MERGE
NODE_71_BIND_SECURITY = eval(THIS::symlist_for_primary,"SYM=expr(_SYMBOL_NAME)") 0
NODE_71_EP_PARAMETERS_FLAG = -2
NODE_71_NAME = merge_across_venues_for_primary
NODE_71_SOURCE =  NODE_72
NODE_71_X = 790.167
NODE_71_Y = 1130.667
NODE_72 = ADD_FIELDS(FIELDS="VALUE double = PRICE * SIZE")
NODE_72_EP_PARAMETERS_FLAG = -2
NODE_72_NAME = value
NODE_72_SOURCE =  NODE_73
NODE_72_X = 790.167
NODE_72_Y = 850.667
NODE_73 = PASSTHROUGH(FIELDS="PRICE,SIZE")
NODE_73_EP_PARAMETERS_FLAG = -2
NODE_73_TICK_TYPE = MKTDATA::TRD
NODE_73_X = 792.833
NODE_73_Y = 604
one_to_many_symbol_mapping = 0
PARAMETER = ORDER_ID 1583834488908507123
PARAMETER = SYM SAN/P
PROCESS_DBS_CONCURENTLY = 1
QUERY_BATCH_SIZE = 0
ROOT = PASSTHROUGH
ROOT_EP_PARAMETERS_FLAG = -2
ROOT_NAME = mkt_trd
ROOT_SOURCE =  NODE_153
ROOT_X = 651.500
ROOT_Y = 3696
SECURITY = $SYM 0
SHOW_TEMPLATE = 
START = 20210625000000000
start_expression = TODAY()
TYPE = GRAPH

[ord_playback]
COMMENT = 
CPU_NUMBER = 4
DB_HINT_FOR_PROCESSING_HOST = 
END = 20210626000000000
end_expression = NOW()
graph_reuse = 1
NESTED_OTQS_USE_ONLY_SINKS_FOR_OUTPUT = TRUE
NODE_139 = TABLE(FIELDS="BID_PRICE double, ASK_PRICE double,\
BID_PRICE1 double, ASK_PRICE1 double,\
BID_PRICE2 double, ASK_PRICE2 double,\
BID_PRICE3 double, ASK_PRICE3 double,\
BID_PRICE4 double, ASK_PRICE4 double,\
BID_PRICE5 double, ASK_PRICE5 double,\
BID_SIZE1 long, ASK_SIZE1 long,\
BID_SIZE2 long, ASK_SIZE2 long,\
BID_SIZE3 long, ASK_SIZE3 long,\
BID_SIZE4 long, ASK_SIZE4 long,\
BID_SIZE5 long, ASK_SIZE5 long,\
MKT_ACC_SIZE double,\
MKT_ACC_VALUE double,\
MKT_LAST_PRICE double,\
MKT_LAST_SIZE double",KEEP_INPUT_FIELDS=true)
NODE_139_EP_PARAMETERS_FLAG = -2
NODE_139_SOURCE =  NODE_172
NODE_139_X = 1592
NODE_139_Y = 2924
NODE_146 = DECLARE_STATE_VARIABLES(SCOPE=ALL_OUTPUTS,VARIABLES="TICK_SET_UNORDERED(LATEST_TICK,1000,SYM) TRADES")
NODE_146_EP_PARAMETERS_FLAG = -2
NODE_146_NAME = trades_tickset
NODE_146_SOURCE =  NODE_176
NODE_146_X = 816
NODE_146_Y = 1904
NODE_153 = UPDATE_TICK_SETS(TICK_SETS="STATE::TRADES")
NODE_153_EP_PARAMETERS_FLAG = -2
NODE_153_SOURCE =  NODE_146
NODE_153_X = 853.333
NODE_153_Y = 2184
NODE_156 = WHERE_CLAUSE(WHERE=false)
NODE_156_EP_PARAMETERS_FLAG = -2
NODE_156_NAME = trd
NODE_156_SOURCE =  NODE_153
NODE_156_X = 930.667
NODE_156_Y = 2464
NODE_17 = PASSTHROUGH
NODE_172 = MERGE
NODE_172_EP_PARAMETERS_FLAG = -2
NODE_172_SOURCE =  NODE_156..IF NODE_175..IF NODE_37
NODE_172_X = 1592
NODE_172_Y = 2710.667
NODE_175 = WHERE_CLAUSE(WHERE=false)
NODE_175_EP_PARAMETERS_FLAG = -2
NODE_175_NAME = book
NODE_175_SOURCE =  NODE_227
NODE_175_X = 1594.667
NODE_175_Y = 2464
NODE_176 = ADD_FIELD(FIELD=SYM,VALUE=_SYMBOL_NAME)
NODE_176_EP_PARAMETERS_FLAG = -2
NODE_176_SOURCE =  NODE_70
NODE_176_X = 816
NODE_176_Y = 1657.333
NODE_17_EP_PARAMETERS_FLAG = -2
NODE_17_NAME = ord
NODE_17_TICK_TYPE = S_ORDERS::ORD
NODE_17_X = 2360
NODE_17_Y = 1904
NODE_187 = UPDATE_FROM_TICK_SET(TICK_SET="STATE::TRADES")
NODE_187_EP_PARAMETERS_FLAG = -2
NODE_187_NAME = update_from_trades
NODE_187_SOURCE =  NODE_139
NODE_187_X = 1594.667
NODE_187_Y = 3170.667
NODE_192 = UPDATE_TICK_SETS(TICK_SETS="STATE::ORDERS")
NODE_192_EP_PARAMETERS_FLAG = -2
NODE_192_NAME = ord
NODE_192_SOURCE =  NODE_193
NODE_192_X = 1592
NODE_192_Y = 5624
NODE_193 = PASSTHROUGH(FIELDS="BID_PRICE1,ASK_PRICE1,BID_PRICE2,ASK_PRICE2,BID_PRICE3,ASK_PRICE3,BID_PRICE4,ASK_PRICE4,BID_PRICE5,ASK_PRICE5,\
BID_SIZE1,ASK_SIZE1,BID_SIZE2,ASK_SIZE2,BID_SIZE3,ASK_SIZE3,BID_SIZE4,ASK_SIZE4,BID_SIZE5,ASK_SIZE5,\
MKT_LAST_VALUE",DROP_FIELDS=true)
NODE_193_EP_PARAMETERS_FLAG = -2
NODE_193_NAME = drop_fields
NODE_193_SOURCE =  NODE_194
NODE_193_X = 1592
NODE_193_Y = 5344
NODE_194 = PER_TICK_SCRIPT(SCRIPT="long QTY_AHEAD = 0;\
long QTY_TRADED_AHEAD = 0;\
string PASSIVE_PERF = \"\";\
long LOCAL::MKT_INTERVAL_SIZE = 0;\
QTY_AHEAD = FIND(STATE::ORDERS,\"QTY_AHEAD\",0,ORDER_ID);\
\
\
if (ORDSTYLE ==\"P\") {\
	if (ORDSTATUS ==\"NEW\") {\
		if (SIDE==\"SELL\") {\
			if (LIMIT_PRICE >= ASK_PRICE1) {\
				QTY_AHEAD = ASK_SIZE1;\
			}\
			if (LIMIT_PRICE >= ASK_PRICE2) {\
				QTY_AHEAD += ASK_SIZE2;\
			}\
			if (LIMIT_PRICE >= ASK_PRICE3) {\
				QTY_AHEAD += ASK_SIZE3;\
			}\
			if (LIMIT_PRICE >= ASK_PRICE4) {\
				QTY_AHEAD += ASK_SIZE4;\
			}\
			if (LIMIT_PRICE >= ASK_PRICE5) {\
				QTY_AHEAD += ASK_SIZE5;\
			}\
		}\
		else {\
			if (LIMIT_PRICE <= BID_PRICE1) {\
				QTY_AHEAD = BID_SIZE1;\
			}\
			if (LIMIT_PRICE <= BID_PRICE2) {\
				QTY_AHEAD += BID_SIZE2;\
			}\
			if (LIMIT_PRICE <= BID_PRICE3) {\
				QTY_AHEAD += BID_SIZE3;\
			}\
			if (LIMIT_PRICE <= BID_PRICE4) {\
				QTY_AHEAD += BID_SIZE4;\
			}\
			if (LIMIT_PRICE <= BID_PRICE5) {\
				QTY_AHEAD += BID_SIZE5;\
			}\
		}\
	}\
	if (CUM_SIZE > 0) {\
		LOCAL::MKT_INTERVAL_SIZE = FILL_SIZE + MKT_ACC_SIZE - ARRIVAL_MKT_ACC_SIZE;\
		QTY_TRADED_AHEAD = (LOCAL::MKT_INTERVAL_SIZE - QTY_AHEAD) - CUM_SIZE;\
	}\
}")
NODE_194_EP_PARAMETERS_FLAG = -2
NODE_194_NAME = passive_stats
NODE_194_SOURCE =  NODE_195
NODE_194_X = 1592
NODE_194_Y = 5064
NODE_195 = PER_TICK_SCRIPT(SCRIPT="long TARGET_QTY = 0;\
long AVAILABLE_QTY = 0;\
double TARGET_PRICE = NAN();\
double TOUCH_FILL_RATE = NAN();\
double OVERSIZED_FILL_RATE = NAN();\
double PRICE_IMPROV_VS_EXP = NAN();\
\
long LOCAL::LEAVES_QTY = ORD_SIZE;\
long LOCAL::NEXT_QTY = 0;\
double LOCAL::TARGET_VALUE = 0.0;\
\
if (ORDSTYLE ==\"A\") {\
	if (SIDE==\"BUY\") {\
		if (ASK_PRICE1 <= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,ASK_SIZE1);\
			LOCAL::TARGET_VALUE += ASK_PRICE1 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += ASK_SIZE1;\
		}\
		if (ASK_PRICE2 <= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,ASK_SIZE2);\
			LOCAL::TARGET_VALUE += ASK_PRICE2 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += ASK_SIZE2;\
		}\
		if (ASK_PRICE3 <= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,ASK_SIZE3);\
			LOCAL::TARGET_VALUE += ASK_PRICE3 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += ASK_SIZE3;\
		}\
		if (ASK_PRICE4 <= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,ASK_SIZE4);\
			LOCAL::TARGET_VALUE += ASK_PRICE4 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += ASK_SIZE4;\
		}\
		if (ASK_PRICE5 <= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,ASK_SIZE5);\
			LOCAL::TARGET_VALUE += ASK_PRICE5 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += ASK_SIZE5;\
		}\
	}\
	else {\
		if (BID_PRICE1 >= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,BID_SIZE1);\
			LOCAL::TARGET_VALUE += BID_PRICE1 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += BID_SIZE1;\
		}\
		if (BID_PRICE2 >= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,BID_SIZE2);\
			LOCAL::TARGET_VALUE += BID_PRICE2 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += BID_SIZE2;\
		}\
		if (BID_PRICE3 >= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,BID_SIZE5);\
			LOCAL::TARGET_VALUE += BID_PRICE3 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += BID_SIZE3;\
		}\
		if (BID_PRICE4 >= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,BID_SIZE4);\
			LOCAL::TARGET_VALUE += BID_PRICE4 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += BID_SIZE4;\
		}\
		if (BID_PRICE5 >= LIMIT_PRICE) {\
			LOCAL::NEXT_QTY = MIN(LOCAL::LEAVES_QTY,BID_SIZE5);\
			LOCAL::TARGET_VALUE += BID_PRICE5 * LOCAL::NEXT_QTY;\
			TARGET_QTY += LOCAL::NEXT_QTY;\
			LOCAL::LEAVES_QTY -= LOCAL::NEXT_QTY;\
			AVAILABLE_QTY += BID_SIZE5;\
		}\
	}\
	if (TARGET_QTY>0) {\
		TARGET_PRICE = LOCAL::TARGET_VALUE / TARGET_QTY;\
		TOUCH_FILL_RATE = MIN(1,FILL_SIZE/TARGET_QTY);\
		OVERSIZED_FILL_RATE = FILL_SIZE/TARGET_QTY;\
	}\
	if (ORDER_VWAP>0) {\
		PRICE_IMPROV_VS_EXP = (TARGET_PRICE - ORDER_VWAP)/ORDER_VWAP;\
	}\
\
\
}")
NODE_195_EP_PARAMETERS_FLAG = -2
NODE_195_NAME = aggr_stats
NODE_195_SOURCE =  NODE_196
NODE_195_X = 1592
NODE_195_Y = 4784
NODE_196 = PER_TICK_SCRIPT(SCRIPT="double EBBO_MID = (BID_PRICE + ASK_PRICE)/2;\
double QUOTED_SPREAD = ASK_PRICE - BID_PRICE;\
\
double EFFECTIVE_SPREAD = NAN();\
double EFFECTIVE_QUOTED_SPREAD_RATIO = NAN();\
double PRICE_IMPROVED = 0.0;\
double PRICE_IMPROVED_PCNT = 0.0;\
double PRICE_IMPROVED_VALUE = 0.0;\
long AT_OR_BETTER_QTY = 0;\
long AT_OR_BETTER_COUNT = 0;\
\
double CUM_PRICE_IMPROVED_VALUE = 0.0;\
long CUM_AT_OR_BETTER_QTY = 0;\
long CUM_AT_OR_BETTER_COUNT  = 0;\
\
double ORDER_VWAP = NAN();\
double PARTICIPATION = NAN();\
double MKT_INTERVAL_VWAP = NAN();\
\
double	PCNT_SLIPPAGE_TO_ARRIVAL = NAN();\
double	PCNT_SLIPPAGE_TO_INTERVAL_VWAP = NAN();\
\
\
\
if (FILL_SIZE > 0) {\
	if (SIDE ==\"BUY\") {\
		EFFECTIVE_SPREAD = 2*(EXEC_PRICE - EBBO_MID);\
		PRICE_IMPROVED = ASK_PRICE - EXEC_PRICE;\
		PRICE_IMPROVED_PCNT = PRICE_IMPROVED / ASK_PRICE;\
	}\
	else {\
		EFFECTIVE_SPREAD = 2*(EBBO_MID - EXEC_PRICE);\
		PRICE_IMPROVED = EXEC_PRICE - BID_PRICE;\
		PRICE_IMPROVED_PCNT = PRICE_IMPROVED / BID_PRICE;\
	}\
	PRICE_IMPROVED_VALUE = PRICE_IMPROVED * FILL_SIZE;\
	if (QUOTED_SPREAD > 0) {\
		EFFECTIVE_QUOTED_SPREAD_RATIO = EFFECTIVE_SPREAD/QUOTED_SPREAD;\
	}\
	if(PRICE_IMPROVED >=0) {\
		AT_OR_BETTER_QTY = FILL_SIZE;\
		AT_OR_BETTER_COUNT = 1;\
	}\
}\
\
CUM_PRICE_IMPROVED_VALUE = FIND(STATE::ORDERS,\"CUM_PRICE_IMPROVED_VALUE\",0.0,ORDER_ID);\
CUM_AT_OR_BETTER_QTY = FIND(STATE::ORDERS,\"CUM_AT_OR_BETTER_QTY\",0,ORDER_ID);\
CUM_AT_OR_BETTER_COUNT  = FIND(STATE::ORDERS,\"CUM_AT_OR_BETTER_COUNT\",0,ORDER_ID);\
\
CUM_PRICE_IMPROVED_VALUE += PRICE_IMPROVED_VALUE;\
CUM_AT_OR_BETTER_QTY += AT_OR_BETTER_QTY;\
CUM_AT_OR_BETTER_COUNT  +=  + AT_OR_BETTER_COUNT;\
\
if (CUM_SIZE > 0) {\
	ORDER_VWAP = CUM_VALUE/CUM_SIZE;\
	MKT_INTERVAL_VWAP = ((EXEC_PRICE * FILL_SIZE) + MKT_ACC_VALUE - ARRIVAL_MKT_ACC_VALUE) / (FILL_SIZE + MKT_ACC_SIZE - ARRIVAL_MKT_ACC_SIZE);\
	PARTICIPATION = CUM_SIZE / (FILL_SIZE + MKT_ACC_SIZE - ARRIVAL_MKT_ACC_SIZE);\
	PCNT_SLIPPAGE_TO_INTERVAL_VWAP = ORDER_VWAP / MKT_INTERVAL_VWAP - 1;\
	if (SIDE ==\"BUY\") {\
			PCNT_SLIPPAGE_TO_ARRIVAL = ORDER_VWAP / ARRIVAL_BID -1;\
	}\
	else {\
			PCNT_SLIPPAGE_TO_ARRIVAL = ORDER_VWAP / ARRIVAL_ASK -1;\
	}\
}")
NODE_196_EP_PARAMETERS_FLAG = -2
NODE_196_NAME = exec_stats
NODE_196_SOURCE =  NODE_197
NODE_196_X = 1592
NODE_196_Y = 4504
NODE_197 = PER_TICK_SCRIPT(SCRIPT="nsectime ARRIVAL_TIME = 0;\
nsectime COMPLETION_TIME = 0;\
double ARRIVAL_BID = NAN();\
double ARRIVAL_ASK = NAN();\
double ARRIVAL_MKT_ACC_SIZE = 0.0;\
double ARRIVAL_MKT_ACC_VALUE = NAN();\
\
\
long MSG_COUNT = 0;\
long REPLACE_COUNT = 0;\
long ORD_SIZE = 0;\
long CUM_SIZE = 0;\
long LEAVES_SIZE = 0;\
long FILL_COUNT = 0;\
long CANCEL_COUNT = 0;\
long NEW_COUNT = 0;\
double CUM_VALUE = 0.0;\
double AVG_PRICE = NAN();\
long DURATION = 0;\
double DURATION_MILLIS = NAN();\
\
BID_PRICE = BID_PRICE1;\
ASK_PRICE = ASK_PRICE1;\
\
\
ARRIVAL_TIME = FIND(STATE::ORDERS,\"ARRIVAL_TIME\",0,ORDER_ID);\
COMPLETION_TIME = FIND(STATE::ORDERS,\"COMPLETION_TIME\",0,ORDER_ID);\
\
ARRIVAL_BID = FIND(STATE::ORDERS,\"ARRIVAL_BID\",NAN(),ORDER_ID);\
ARRIVAL_ASK = FIND(STATE::ORDERS,\"ARRIVAL_ASK\",NAN(),ORDER_ID);\
\
ARRIVAL_MKT_ACC_SIZE = FIND(STATE::ORDERS,\"ARRIVAL_MKT_ACC_SIZE\",NAN(),ORDER_ID);\
ARRIVAL_MKT_ACC_VALUE = FIND(STATE::ORDERS,\"ARRIVAL_MKT_ACC_VALUE\",NAN(),ORDER_ID);\
\
\
\
MSG_COUNT = FIND(STATE::ORDERS,\"MSG_COUNT\",0,ORDER_ID);\
REPLACE_COUNT = FIND(STATE::ORDERS,\"REPLACE_COUNT\",0,ORDER_ID);\
FILL_COUNT = FIND(STATE::ORDERS,\"FILL_COUNT\",0,ORDER_ID);\
CANCEL_COUNT = FIND(STATE::ORDERS,\"CANCEL_COUNT\",0,ORDER_ID);\
NEW_COUNT = FIND(STATE::ORDERS,\"NEW_COUNT\",0,ORDER_ID);\
\
ORD_SIZE = FIND(STATE::ORDERS,\"ORD_SIZE\",0,ORDER_ID);\
CUM_SIZE = FIND(STATE::ORDERS,\"CUM_SIZE\",0,ORDER_ID);\
CUM_VALUE = FIND(STATE::ORDERS,\"CUM_VALUE\",0.0,ORDER_ID);\
\
LEAVES_SIZE = SIZE;\
\
MSG_COUNT += 1;\
\
if (ORDSTATUS ==\"NEW\") {\
	ARRIVAL_TIME = (TIMESTAMP);\
	ARRIVAL_BID = BID_PRICE;\
	ARRIVAL_ASK = ASK_PRICE;\
	ARRIVAL_MKT_ACC_SIZE = MKT_ACC_SIZE;\
	ARRIVAL_MKT_ACC_VALUE = MKT_ACC_VALUE;\
	ORD_SIZE = SIZE;\
	NEW_COUNT += 1;\
}\
else if (ORDSTATUS ==\"REPLACE\") {\
	REPLACE_COUNT += 1;\
	ORD_SIZE = SIZE;\
}\
else if (ORDSTATUS == \"FILL\" ) {\
	CUM_SIZE += FILL_SIZE;\
	CUM_VALUE += EXEC_PRICE * FILL_SIZE;\
	FILL_COUNT += 1;\
	if (CUM_SIZE ==ORD_SIZE) {\
		COMPLETION_TIME = (TIMESTAMP);\
	}	\
}\
else if (ORDSTATUS == \"CANCEL\") {\
	COMPLETION_TIME = (TIMESTAMP);\
	CANCEL_COUNT += 1;\
}\
\
if (CUM_SIZE > 0) {\
	AVG_PRICE = CUM_VALUE / CUM_SIZE;\
}\
\
if (COMPLETION_TIME > 0) {\
	DURATION = NSECTIME_TO_LONG(COMPLETION_TIME) - NSECTIME_TO_LONG(ARRIVAL_TIME);\
	DURATION_MILLIS = DURATION / 1000000;\
}")
NODE_197_EP_PARAMETERS_FLAG = -2
NODE_197_NAME = arrival_and_msg_counts
NODE_197_SOURCE =  NODE_198
NODE_197_X = 1592
NODE_197_Y = 4224
NODE_198 = DECLARE_STATE_VARIABLES(VARIABLES="TICK_SET_UNORDERED(LATEST_TICK,100,ORDER_ID) ORDERS")
NODE_198_EP_PARAMETERS_FLAG = -2
NODE_198_NAME = declare_orders_state
NODE_198_SOURCE =  NODE_240
NODE_198_X = 1592
NODE_198_Y = 3944
NODE_211 = TABLE(FIELDS="SYM,\
BID_PRICE double, \
ASK_PRICE double,\
ORDER_ID string[32],\
ORDSTYLE string[1],\
ORDSTATUS string,\
SEQ_ID long,\
SIDE string[4],\
ORD_SIZE long,\
LIMIT_PRICE double,\
EXEC_PRICE double,\
FILL_SIZE long,\
CUM_SIZE long,\
LEAVES_SIZE long,\
CUM_VALUE long,\
ORDER_VWAP double,\
CCYMULTIPLIER double,\
ALGO string[1],\
ISIN string[13],\
MIC string[4],\
VENUE string[7],\
CCY string[3],\
MKT_LAST_PRICE double,\
MKT_LAST_SIZE long,\
MKT_ACC_SIZE long,\
MKT_ACC_VALUE double,\
ARRIVAL_TIME nsectime,\
COMPLETION_TIME nsectime,\
ARRIVAL_BID double,\
ARRIVAL_ASK double,\
ARRIVAL_MKT_ACC_SIZE long,\
ARRIVAL_MKT_ACC_VALUE double,\
MSG_COUNT long,\
NEW_COUNT long,\
REPLACE_COUNT long,\
FILL_COUNT long,\
CANCEL_COUNT long,\
DURATION long,\
DURATION_MILLIS double,\
EBBO_MID double,\
QUOTED_SPREAD double,\
EFFECTIVE_SPREAD double,\
EFFECTIVE_QUOTED_SPREAD_RATIO double,\
PRICE_IMPROVED double,\
PRICE_IMPROVED_PCNT double,\
PRICE_IMPROVED_VALUE double,\
AT_OR_BETTER_QTY long,\
AT_OR_BETTER_COUNT long,\
CUM_PRICE_IMPROVED_VALUE double,\
CUM_AT_OR_BETTER_QTY long,\
CUM_AT_OR_BETTER_COUNT long,\
PARTICIPATION double,\
MKT_INTERVAL_VWAP double,\
PCNT_SLIPPAGE_TO_ARRIVAL double,\
PCNT_SLIPPAGE_TO_INTERVAL_VWAP double,\
TARGET_QTY long,\
AVAILABLE_QTY long,\
TARGET_PRICE double,\
TOUCH_FILL_RATE double,\
OVERSIZED_FILL_RATE double,\
PRICE_IMPROV_VS_EXP double,\
QTY_AHEAD long,\
QTY_TRADED_AHEAD long,\
PASSIVE_PERF string")
NODE_211_EP_PARAMETERS_FLAG = -2
NODE_211_NAME = standardize_schema
NODE_211_SOURCE =  NODE_192
NODE_211_X = 1592
NODE_211_Y = 5904
NODE_214 = PER_TICK_SCRIPT(SCRIPT="double PRICE_NEW_BUY = NAN();\
double PRICE_NEW_SELL = NAN();\
double PRICE_CANCEL = NAN();\
double PRICE_REPLACE = NAN();\
double PRICE_FILL_BUY = NAN();\
double PRICE_FILL_SELL = NAN();\
\
\
\
if (ORDSTATUS == \"NEW\") {\
	if (SIDE==\"BUY\") {\
		PRICE_NEW_BUY = LIMIT_PRICE;\
	}\
	else {\
		PRICE_NEW_SELL = LIMIT_PRICE;\
	}\
}\
else if (ORDSTATUS == \"CANCEL\") {\
	PRICE_CANCEL = LIMIT_PRICE;\
}\
else if (ORDSTATUS == \"REPLACE\") {\
	PRICE_REPLACE = LIMIT_PRICE;\
}\
else {\
	if (SIDE==\"BUY\") {\
		PRICE_FILL_BUY = EXEC_PRICE;\
	}\
	else {\
		PRICE_FILL_SELL = EXEC_PRICE;\
	}\
\
}")
NODE_214_EP_PARAMETERS_FLAG = -2
NODE_214_NAME = price_fields_for_display
NODE_214_SOURCE =  NODE_211
NODE_214_X = 1592
NODE_214_Y = 6184
NODE_215 = VIRTUAL_OB
NODE_215_EP_PARAMETERS_FLAG = -2
NODE_215_SOURCE =  NODE_223
NODE_215_X = 1592
NODE_215_Y = 604
NODE_216 = MERGE
NODE_216_BIND_SECURITY = eval(THIS::symlist_for_primary,"SYM=expr(_SYMBOL_NAME)") 0
NODE_216_EP_PARAMETERS_FLAG = -2
NODE_216_NAME = merge_across_venues_for_primary
NODE_216_SOURCE =  NODE_215
NODE_216_X = 1592
NODE_216_Y = 850.667
NODE_223 = ADD_FIELDS(FIELDS="ASK_SIZE long = 1, BID_SIZE long = 1")
NODE_223_EP_PARAMETERS_FLAG = -2
NODE_223_SOURCE =  NODE_66
NODE_223_X = 1592
NODE_223_Y = 390.667
NODE_224 = DECLARE_STATE_VARIABLES(SCOPE=ALL_OUTPUTS,VARIABLES="TICK_SET_UNORDERED(LATEST_TICK,1000,SYM) BOOK")
NODE_224_EP_PARAMETERS_FLAG = -2
NODE_224_NAME = book_tickset
NODE_224_SOURCE =  NODE_239
NODE_224_X = 1592
NODE_224_Y = 1904
NODE_227 = UPDATE_TICK_SETS(TICK_SETS="STATE::BOOK")
NODE_227_EP_PARAMETERS_FLAG = -2
NODE_227_SOURCE =  NODE_224
NODE_227_X = 1592
NODE_227_Y = 2184
NODE_228 = UPDATE_FROM_TICK_SET(TICK_SET="STATE::BOOK")
NODE_228_EP_PARAMETERS_FLAG = -2
NODE_228_NAME = update_from_book
NODE_228_SOURCE =  NODE_187
NODE_228_X = 1594.667
NODE_228_Y = 3450.667
NODE_229 = PASSTHROUGH(FIELDS="BID_PRICE1, ASK_PRICE1, BID_SIZE1, ASK_SIZE1")
NODE_229_EP_PARAMETERS_FLAG = -2
NODE_229_SOURCE =  NODE_234
NODE_229_X = 1592
NODE_229_Y = 1410.667
NODE_234 = OB_SNAPSHOT_FLAT(IS_RUNNING_AGGR=true,MAX_LEVELS=1)
NODE_234_EP_PARAMETERS_FLAG = -2
NODE_234_SOURCE =  NODE_216
NODE_234_X = 1592
NODE_234_Y = 1130.667
NODE_239 = ADD_FIELD(FIELD=SYM,VALUE=_SYMBOL_NAME)
NODE_239_EP_PARAMETERS_FLAG = -2
NODE_239_SOURCE =  NODE_229
NODE_239_X = 1592
NODE_239_Y = 1657.333
NODE_240 = MERGE(IDENTIFY_INPUT_TS=false)
NODE_240_BIND_SECURITY = eval(THIS::primary_symlist) 0
NODE_240_EP_PARAMETERS_FLAG = -2
NODE_240_SOURCE =  NODE_228
NODE_240_X = 1592
NODE_240_Y = 3697.333
NODE_243 = LAST_TICK(BUCKET_INTERVAL=60,BUCKET_TIME=BUCKET_START,TIME_SERIES_TYPE=STATE_TS,GROUP_BY="SYM,ORDER_ID")
NODE_243_EP_PARAMETERS_FLAG = -2
NODE_243_SINK =  NODE_248
NODE_243_SOURCE =  NODE_214
NODE_243_X = 1592
NODE_243_Y = 6430.667
NODE_248 = COMPUTE(COMPUTE="AVERAGE(INPUT_FIELD_NAME=\"$METRIC\") AVG_METRIC",BUCKET_INTERVAL=60,BUCKET_TIME=BUCKET_START,GROUP_BY=ALGO,APPEND_OUTPUT_FIELD_NAME=false)
NODE_248_EP_PARAMETERS_FLAG = -2
NODE_248_SINK =  NODE_251
NODE_248_X = 1893.333
NODE_248_Y = 6677.333
NODE_251 = TRANSPOSE(KEY_TYPE=FIELD_VALUE,INDEX_FIELD_NAME=ALGO)
NODE_251_EP_PARAMETERS_FLAG = -2
NODE_251_SINK =  NODE_252
NODE_251_X = 1893.333
NODE_251_Y = 6924
NODE_252 = PASSTHROUGH
NODE_252_EP_PARAMETERS_FLAG = -2
NODE_252_NAME = stat_across_time
NODE_252_X = 1896
NODE_252_Y = 7416
NODE_27 = MERGE(IDENTIFY_INPUT_TS=false)
NODE_27_BIND_SECURITY = eval(THIS::symlist_for_primary,"SYM=expr(_SYMBOL_NAME)") 0
NODE_27_EP_PARAMETERS_FLAG = -2
NODE_27_NAME = merge_across_venues_for_primary
NODE_27_SOURCE =  NODE_17
NODE_27_X = 2288
NODE_27_Y = 2184
NODE_37 = PASSTHROUGH(FIELDS="ebbo.TIMESTAMP,ord.TIMESTAMP",DROP_FIELDS=true)
NODE_37_EP_PARAMETERS_FLAG = -2
NODE_37_NAME = ord
NODE_37_SOURCE =  NODE_27
NODE_37_X = 2216
NODE_37_Y = 2464
NODE_66 = PASSTHROUGH
NODE_66_EP_PARAMETERS_FLAG = -2
NODE_66_NAME = book
NODE_66_TICK_TYPE = MKTDATA::QTE
NODE_66_X = 1592
NODE_66_Y = 144
NODE_70 = COMPUTE(COMPUTE="SUM(INPUT_FIELD_NAME=\"SIZE\") MKT_ACC_SIZE,\
SUM(INPUT_FIELD_NAME=\"VALUE\") MKT_ACC_VALUE,\
LAST(INPUT_FIELD_NAME=\"PRICE\") MKT_LAST_PRICE,\
LAST(INPUT_FIELD_NAME=\"SIZE\") MKT_LAST_SIZE",IS_RUNNING_AGGR=true,APPEND_OUTPUT_FIELD_NAME=false)
NODE_70_EP_PARAMETERS_FLAG = -2
NODE_70_NAME = acc_size
NODE_70_SOURCE =  NODE_71
NODE_70_X = 816
NODE_70_Y = 1410.667
NODE_71 = MERGE
NODE_71_BIND_SECURITY = eval(THIS::symlist_for_primary,"SYM=expr(_SYMBOL_NAME)") 0
NODE_71_EP_PARAMETERS_FLAG = -2
NODE_71_NAME = merge_across_venues_for_primary
NODE_71_SOURCE =  NODE_72
NODE_71_X = 816
NODE_71_Y = 1130.667
NODE_72 = ADD_FIELDS(FIELDS="VALUE double = PRICE * SIZE")
NODE_72_EP_PARAMETERS_FLAG = -2
NODE_72_NAME = value
NODE_72_SOURCE =  NODE_73
NODE_72_X = 816
NODE_72_Y = 850.667
NODE_73 = PASSTHROUGH(FIELDS="PRICE,SIZE")
NODE_73_EP_PARAMETERS_FLAG = -2
NODE_73_TICK_TYPE = MKTDATA::TRD
NODE_73_X = 818.667
NODE_73_Y = 604
one_to_many_symbol_mapping = 0
PARAMETER = METRIC PCNT_SLIPPAGE_TO_INTERVAL_VWAP
PROCESS_DBS_CONCURENTLY = 1
QUERY_BATCH_SIZE = 0
ROOT = PASSTHROUGH
ROOT_EP_PARAMETERS_FLAG = -2
ROOT_NAME = output
ROOT_SOURCE =  NODE_243
ROOT_X = 1293.333
ROOT_Y = 6677.333
SHOW_TEMPLATE = 
START = 20210625000000000
start_expression = TODAY()
TYPE = GRAPH

[qtes]
COMMENT = 
CPU_NUMBER = 4
DB_HINT_FOR_PROCESSING_HOST = 
END = 20210626000000000
end_expression = NOW()
graph_reuse = 1
NESTED_OTQS_USE_ONLY_SINKS_FOR_OUTPUT = TRUE
NODE_238 = ADD_FIELD(FIELD=VENUE,VALUE="_SYMBOL_PARAM.VENUE")
NODE_238_EP_PARAMETERS_FLAG = -2
NODE_238_SOURCE =  NODE_66
NODE_238_X = 1525
NODE_238_Y = 467.333
NODE_241 = MERGE
NODE_241_BIND_SECURITY = eval(THIS::symlist_for_primary,"SYM=expr(_SYMBOL_NAME)") 0
NODE_241_EP_PARAMETERS_FLAG = -2
NODE_241_NAME = merge_across_venues_for_primary
NODE_241_SOURCE =  NODE_238
NODE_241_X = 1547
NODE_241_Y = 808.667
NODE_243 = DECLARE_STATE_VARIABLES(VARIABLES="double BID_BATE,BID_AQXE,BID_CHIX,BID_TRQX,BID_PRIMARY;\
double ASK_BATE,ASK_AQXE,ASK_CHIX,ASK_TRQX,ASK_PRIMARY")
NODE_243_EP_PARAMETERS_FLAG = -2
NODE_243_SOURCE =  NODE_241
NODE_243_X = 1620
NODE_243_Y = 1086.667
NODE_246 = PER_TICK_SCRIPT(SCRIPT="double BID_BEST = NAN();\
double ASK_BEST = NAN();\
double BID_BATE = NAN();\
double BID_AQXE = NAN();\
double BID_CHIX = NAN();\
double BID_TRQX = NAN();\
double BID_PRIMARY = NAN();\
double ASK_BATE = NAN();\
double ASK_AQXE = NAN();\
double ASK_CHIX = NAN();\
double ASK_TRQX = NAN();\
double ASK_PRIMARY = NAN();\
\
\
if (VENUE==\"PRIMARY\") {\
	STATE::BID_PRIMARY = BID_PRICE;\
	STATE::ASK_PRIMARY = ASK_PRICE;\
}\
else if  (VENUE==\"BATE\") {\
	STATE::BID_BATE = BID_PRICE;\
	STATE::ASK_BATE = ASK_PRICE;\
}\
else if (VENUE==\"CHIX\") {\
	STATE::BID_CHIX = BID_PRICE;\
	STATE::ASK_CHIX = ASK_PRICE;\
}\
else if (VENUE==\"TRQX\") {\
	STATE::BID_TRQX = BID_PRICE;\
	STATE::ASK_TRQX = ASK_PRICE;\
}\
else if (VENUE==\"AQXE\") {\
	STATE::BID_AQXE = BID_PRICE;\
	STATE::ASK_AQXE = ASK_PRICE;\
}\
\
if (TIMESTAMP != TIMESTAMP[-1]) {\
	BID_BATE = STATE::BID_BATE;\
	BID_AQXE = STATE::BID_AQXE;\
	BID_CHIX = STATE::BID_CHIX;\
	BID_TRQX = STATE::BID_TRQX;\
	BID_PRIMARY = STATE::BID_PRIMARY;\
	ASK_BATE = STATE::ASK_BATE;\
	ASK_AQXE = STATE::ASK_AQXE;\
	ASK_CHIX =STATE::ASK_CHIX;\
	ASK_TRQX = STATE::ASK_TRQX;\
	ASK_PRIMARY = STATE::ASK_PRIMARY;\
	BID_BEST = MAX(BID_BATE,BID_AQXE,BID_CHIX,BID_TRQX,BID_PRIMARY);\
	ASK_BEST = -MAX(-ASK_BATE,-ASK_AQXE,-ASK_CHIX,-ASK_TRQX,-ASK_PRIMARY);\
\
	return true;\
\
}\
else {\
	return false;\
}")
NODE_246_EP_PARAMETERS_FLAG = -2
NODE_246_SOURCE =  NODE_243
NODE_246_X = 1568
NODE_246_Y = 1347.333
NODE_66 = PASSTHROUGH
NODE_66_EP_PARAMETERS_FLAG = -2
NODE_66_NAME = book
NODE_66_TICK_TYPE = MKTDATA::QTE
NODE_66_X = 1525
NODE_66_Y = 126
one_to_many_symbol_mapping = 0
PARAMETER = SYM PHIA/A
PROCESS_DBS_CONCURENTLY = 1
QUERY_BATCH_SIZE = 0
ROOT = PASSTHROUGH(FIELDS="BID_PRICE,ASK_PRICE,VENUE,SYMBOL_NAME,TICK_TYPE",DROP_FIELDS=true)
ROOT_EP_PARAMETERS_FLAG = -2
ROOT_NAME = output
ROOT_SOURCE =  NODE_246
ROOT_X = 656
ROOT_Y = 1062
SECURITY = $SYM 0
SHOW_TEMPLATE = 
START = 20210625000000000
start_expression = TODAY()
TYPE = GRAPH

[ord_with_book_and_trd_experimental]
COMMENT = 
CPU_NUMBER = 4
DB_HINT_FOR_PROCESSING_HOST = 
END = 20210626000000000
end_expression = DATEADD("DAY",1,TODAY())
graph_reuse = 1
NESTED_OTQS_USE_ONLY_SINKS_FOR_OUTPUT = TRUE
NODE_139 = TABLE(FIELDS="SYM string, BID_PRICE1 double, ASK_PRICE1 double,\
BID_PRICE2 double, ASK_PRICE2 double,\
BID_PRICE3 double, ASK_PRICE3 double,\
BID_PRICE4 double, ASK_PRICE4 double,\
BID_PRICE5 double, ASK_PRICE5 double,\
BID_SIZE1 long, ASK_SIZE1 long,\
BID_SIZE2 long, ASK_SIZE2 long,\
BID_SIZE3 long, ASK_SIZE3 long,\
BID_SIZE4 long, ASK_SIZE4 long,\
BID_SIZE5 long, ASK_SIZE5 long,\
MKT_ACC_SIZE double,\
MKT_ACC_VALUE double",KEEP_INPUT_FIELDS=true)
NODE_139_EP_PARAMETERS_FLAG = -2
NODE_139_SOURCE =  NODE_172
NODE_139_X = 1532
NODE_139_Y = 2751.333
NODE_145 = WHERE_CLAUSE(WHERE="BID_PRICE1 != BID_PRICE1[-1] OR ASK_PRICE1 != ASK_PRICE1[-1] OR\
BID_SIZE1 != BID_SIZE1[-1] OR ASK_SIZE1 != ASK_SIZE1[-1]")
NODE_145_EP_PARAMETERS_FLAG = -2
NODE_145_NAME = top_of_book_change
NODE_145_SOURCE =  NODE_66
NODE_145_X = 1534.667
NODE_145_Y = 907.667
NODE_146 = DECLARE_STATE_VARIABLES(SCOPE=ALL_OUTPUTS,VARIABLES="TICK_SET_UNORDERED(LATEST_TICK,1000,SYM) TRADES")
NODE_146_EP_PARAMETERS_FLAG = -2
NODE_146_NAME = trades_tickset
NODE_146_SOURCE =  NODE_189
NODE_146_X = 756
NODE_146_Y = 1614.333
NODE_153 = UPDATE_TICK_SETS(TICK_SETS="STATE::TRADES")
NODE_153_EP_PARAMETERS_FLAG = -2
NODE_153_SOURCE =  NODE_146
NODE_153_X = 793.333
NODE_153_Y = 1894.333
NODE_156 = WHERE_CLAUSE(WHERE=false)
NODE_156_EP_PARAMETERS_FLAG = -2
NODE_156_NAME = trd
NODE_156_SOURCE =  NODE_153
NODE_156_X = 833.333
NODE_156_Y = 2174.333
NODE_159 = UPDATE_TICK_SETS(TICK_SETS="STATE::BOOK")
NODE_159_EP_PARAMETERS_FLAG = -2
NODE_159_SOURCE =  NODE_160
NODE_159_X = 1532
NODE_159_Y = 1894.333
NODE_160 = DECLARE_STATE_VARIABLES(SCOPE=ALL_OUTPUTS,VARIABLES="TICK_SET_UNORDERED(LATEST_TICK,1000,SYM) BOOK")
NODE_160_EP_PARAMETERS_FLAG = -2
NODE_160_NAME = book_tickset
NODE_160_SOURCE =  NODE_192
NODE_160_X = 1532
NODE_160_Y = 1614.333
NODE_17 = PASSTHROUGH
NODE_172 = MERGE
NODE_172_EP_PARAMETERS_FLAG = -2
NODE_172_SOURCE =  NODE_156..IF NODE_175..IF NODE_193
NODE_172_X = 1532
NODE_172_Y = 2421
NODE_175 = WHERE_CLAUSE(WHERE=false)
NODE_175_EP_PARAMETERS_FLAG = -2
NODE_175_NAME = book
NODE_175_SOURCE =  NODE_159
NODE_175_X = 1534.667
NODE_175_Y = 2174.333
NODE_176 = ADD_FIELD(FIELD=SYM,VALUE=_SYMBOL_NAME)
NODE_176_EP_PARAMETERS_FLAG = -2
NODE_176_SOURCE =  NODE_70
NODE_176_X = 756
NODE_176_Y = 1154.333
NODE_177 = ADD_FIELD(FIELD=SYM,VALUE=_SYMBOL_NAME)
NODE_177_EP_PARAMETERS_FLAG = -2
NODE_177_SOURCE =  NODE_145..IF
NODE_177_X = 1532
NODE_177_Y = 1154.333
NODE_17_EP_PARAMETERS_FLAG = -2
NODE_17_NAME = ord
NODE_17_TICK_TYPE = S_ORDERS::ORD
NODE_17_X = 2300
NODE_17_Y = 1614.333
NODE_184 = UPDATE_FROM_TICK_SET(TICK_SET="STATE::BOOK")
NODE_184_EP_PARAMETERS_FLAG = -2
NODE_184_SOURCE =  NODE_187
NODE_184_X = 1534.667
NODE_184_Y = 3295
NODE_187 = UPDATE_FROM_TICK_SET(TICK_SET="STATE::BOOK")
NODE_187_EP_PARAMETERS_FLAG = -2
NODE_187_SOURCE =  NODE_139
NODE_187_X = 1534.667
NODE_187_Y = 3081.667
NODE_189 = MERGE(IDENTIFY_INPUT_TS=false)
NODE_189_BIND_SECURITY = eval(THIS::primary_symlist) 0
NODE_189_EP_PARAMETERS_FLAG = -2
NODE_189_SOURCE =  NODE_176
NODE_189_X = 756
NODE_189_Y = 1367.667
NODE_192 = MERGE(IDENTIFY_INPUT_TS=false)
NODE_192_BIND_SECURITY = eval(THIS::primary_symlist) 0
NODE_192_EP_PARAMETERS_FLAG = -2
NODE_192_SOURCE =  NODE_177
NODE_192_X = 1532
NODE_192_Y = 1367.667
NODE_193 = MERGE(IDENTIFY_INPUT_TS=false)
NODE_193_BIND_SECURITY = eval(THIS::primary_symlist) 0
NODE_193_EP_PARAMETERS_FLAG = -2
NODE_193_SOURCE =  NODE_27
NODE_193_X = 2182.667
NODE_193_Y = 2174.333
NODE_27 = MERGE(IDENTIFY_INPUT_TS=false)
NODE_27_BIND_SECURITY = eval(THIS::symlist_for_primary,"SYM=expr(_SYMBOL_NAME)") 0
NODE_27_EP_PARAMETERS_FLAG = -2
NODE_27_NAME = merge_across_venues_for_primary
NODE_27_SOURCE =  NODE_17
NODE_27_X = 2228
NODE_27_Y = 1894.333
NODE_66 = PASSTHROUGH
NODE_66_EP_PARAMETERS_FLAG = -2
NODE_66_NAME = book
NODE_66_TICK_TYPE = MKTDATA::BOOK
NODE_66_X = 1532
NODE_66_Y = 627.667
NODE_70 = COMPUTE(COMPUTE="SUM(INPUT_FIELD_NAME=\"SIZE\") MKT_ACC_SIZE,\
SUM(INPUT_FIELD_NAME=\"VALUE\") MKT_ACC_VALUE",IS_RUNNING_AGGR=true,APPEND_OUTPUT_FIELD_NAME=false)
NODE_70_EP_PARAMETERS_FLAG = -2
NODE_70_NAME = acc_size
NODE_70_SOURCE =  NODE_71
NODE_70_X = 756
NODE_70_Y = 907.667
NODE_71 = MERGE
NODE_71_BIND_SECURITY = eval(THIS::symlist_for_primary,"SYM=expr(_SYMBOL_NAME)") 0
NODE_71_EP_PARAMETERS_FLAG = -2
NODE_71_NAME = merge_across_venues_for_primary
NODE_71_SOURCE =  NODE_72
NODE_71_X = 756
NODE_71_Y = 627.667
NODE_72 = ADD_FIELDS(FIELDS="VALUE double = PRICE * SIZE")
NODE_72_EP_PARAMETERS_FLAG = -2
NODE_72_NAME = value
NODE_72_SOURCE =  NODE_73
NODE_72_X = 756
NODE_72_Y = 347.667
NODE_73 = PASSTHROUGH(FIELDS="PRICE,SIZE")
NODE_73_EP_PARAMETERS_FLAG = -2
NODE_73_TICK_TYPE = MKTDATA::TRD
NODE_73_X = 758.667
NODE_73_Y = 101
one_to_many_symbol_mapping = 0
PROCESS_DBS_CONCURENTLY = 1
QUERY_BATCH_SIZE = 0
ROOT = MERGE(IDENTIFY_INPUT_TS=false)
ROOT_BIND_SECURITY = eval(THIS::primary_symlist) 0
ROOT_COMMENTED_OUT = 1
ROOT_EP_PARAMETERS_FLAG = -2
ROOT_SOURCE =  NODE_184
ROOT_X = 1532
ROOT_Y = 3508.333
RunningQuery = 1
SECURITY = eval(THIS::primary_symlist) 0 No
SECURITY = HSBA/L 0 No
SECURITY = eval(THIS::primary_symlist) 0 No
SECURITY = AM/P 0 No
SHOW_TEMPLATE = 
START = 20210625000000000
start_expression = TODAY()
TYPE = GRAPH

[mktdata_book]
COMMENT = 
CPU_NUMBER = 4
DB_HINT_FOR_PROCESSING_HOST = 
END = 20210626000000000
end_expression = DATEADD("DAY",1,TODAY())
graph_reuse = 1
NESTED_OTQS_USE_ONLY_SINKS_FOR_OUTPUT = TRUE
NODE_145 = WHERE_CLAUSE(WHERE="BID_PRICE1 != BID_PRICE1[-1] OR ASK_PRICE1 != ASK_PRICE1[-1] OR\
BID_SIZE1 != BID_SIZE1[-1] OR ASK_SIZE1 != ASK_SIZE1[-1]")
NODE_145_EP_PARAMETERS_FLAG = -2
NODE_145_NAME = top_of_book_change
NODE_145_SOURCE =  NODE_66
NODE_145_X = 2296.667
NODE_145_Y = 606
NODE_159 = UPDATE_TICK_SETS(TICK_SETS="STATE::BOOK")
NODE_159_EP_PARAMETERS_FLAG = -2
NODE_159_SOURCE =  NODE_160
NODE_159_X = 2238
NODE_159_Y = 1429.333
NODE_160 = DECLARE_STATE_VARIABLES(SCOPE=ALL_OUTPUTS,VARIABLES="TICK_SET_UNORDERED(LATEST_TICK,1000,SYM) BOOK")
NODE_160_EP_PARAMETERS_FLAG = -2
NODE_160_NAME = book_tickset
NODE_160_SOURCE =  NODE_177
NODE_160_X = 2326
NODE_160_Y = 1124.333
NODE_172 = MERGE
NODE_172_EP_PARAMETERS_FLAG = -2
NODE_172_SOURCE =  NODE_175..IF
NODE_172_X = 2120
NODE_172_Y = 1956
NODE_175 = WHERE_CLAUSE(WHERE=false)
NODE_175_EP_PARAMETERS_FLAG = -2
NODE_175_NAME = book
NODE_175_SOURCE =  NODE_159
NODE_175_X = 2192.667
NODE_175_Y = 1709.333
NODE_177 = ADD_FIELD(FIELD=SYM,VALUE=_SYMBOL_NAME)
NODE_177_EP_PARAMETERS_FLAG = -2
NODE_177_SOURCE =  NODE_145..IF
NODE_177_X = 2294
NODE_177_Y = 852.666
NODE_189 = NUM_TICKS(BUCKET_INTERVAL=1)
NODE_189_EP_PARAMETERS_FLAG = -2
NODE_189_SOURCE =  NODE_190
NODE_189_X = 1496
NODE_189_Y = 2262
NODE_190 = TABLE(FIELDS="BID_PRICE1 double, ASK_PRICE1 double,\
BID_PRICE2 double, ASK_PRICE2 double,\
BID_PRICE3 double, ASK_PRICE3 double,\
BID_PRICE4 double, ASK_PRICE4 double,\
BID_PRICE5 double, ASK_PRICE5 double,\
BID_SIZE1 long, ASK_SIZE1 long,\
BID_SIZE2 long, ASK_SIZE2 long,\
BID_SIZE3 long, ASK_SIZE3 long,\
BID_SIZE4 long, ASK_SIZE4 long,\
BID_SIZE5 long, ASK_SIZE5 long,\
MKT_ACC_SIZE double,\
MKT_ACC_VALUE double",KEEP_INPUT_FIELDS=true)
NODE_190_EP_PARAMETERS_FLAG = -2
NODE_190_SOURCE =  NODE_172
NODE_190_X = 2090
NODE_190_Y = 2169.333
NODE_66 = PASSTHROUGH
NODE_66_EP_PARAMETERS_FLAG = -2
NODE_66_NAME = book
NODE_66_TICK_TYPE = MKTDATA::BOOK
NODE_66_X = 2294
NODE_66_Y = 326
one_to_many_symbol_mapping = 0
PROCESS_DBS_CONCURENTLY = 1
QUERY_BATCH_SIZE = 0
ROOT = DUMP_TICK_SET(TICK_SET="STATE::BOOK")
ROOT_EP_PARAMETERS_FLAG = -2
ROOT_SOURCE =  NODE_189
ROOT_X = 1060
ROOT_Y = 2974
RunningQuery = 1
SECURITY = eval(THIS::primary_symlist) 0
SECURITY = HSBA/L 0 No
SECURITY = eval(THIS::primary_symlist) 0 No
SHOW_TEMPLATE = 
START = 20210625000000000
start_expression = TODAY()
TYPE = GRAPH

[dataquality]
COMMENT = 
CPU_NUMBER = 4
DB_HINT_FOR_PROCESSING_HOST = 
END = 20210626000000000
end_expression = DATEADD("DAY",1,TODAY())
graph_reuse = 1
NESTED_OTQS_USE_ONLY_SINKS_FOR_OUTPUT = TRUE
NODE_194 = SHOW_HEARTBEATS
NODE_194_EP_PARAMETERS_FLAG = -2
NODE_194_TICK_TYPE = MKTDATA::BOOK
NODE_194_X = 1527.667
NODE_194_Y = 636.667
one_to_many_symbol_mapping = 0
PROCESS_DBS_CONCURENTLY = 1
QUERY_BATCH_SIZE = 0
ROOT = MERGE
ROOT_EP_PARAMETERS_FLAG = -2
ROOT_SOURCE =  NODE_194
ROOT_X = 1525
ROOT_Y = 914
RunningQuery = 1
SECURITY = eval(THIS::primary_symlist) 0
SECURITY = HSBA/L 0 No
SECURITY = eval(THIS::primary_symlist) 0 No
SHOW_TEMPLATE = 
START = 20210625000000000
start_expression = TODAY()
TYPE = GRAPH

[read_order_snapshot]
COMMENT = 
CPU_NUMBER = 1
DB_HINT_FOR_PROCESSING_HOST = 
graph_reuse = 0
NESTED_OTQS_USE_ONLY_SINKS_FOR_OUTPUT = TRUE
NODE_12 = PASSTHROUGH(FIELDS="ord_state.TIMESTAMP,xrates.TIMESTAMP",DROP_FIELDS=true)
NODE_12_EP_PARAMETERS_FLAG = -2
NODE_12_SOURCE =  NODE_13
NODE_12_X = 1525
NODE_12_Y = 1765
NODE_13 = JOIN_BY_TIME(LEADING_SOURCES=ord_state,JOIN_KEYS=CCY,SAME_TIMESTAMP_JOIN_POLICY=EACH_FOR_LEADER_WITH_FIRST,ADD_SOURCE_PREFIX=false)
NODE_13_EP_PARAMETERS_FLAG = -2
NODE_13_SOURCE =  NODE_15 NODE_14
NODE_13_X = 1525
NODE_13_Y = 1551.666
NODE_14 = CSV_FILE_LISTING(TIME_ASSIGNMENT=_START_TIME,FIELD_DELIMITERS="\",\"",FILE_CONTENTS="CCY string[3],double USD_XRATE\
DKK,0.16\
EUR,1.19\
GBP,1.40\
NOK,0.12\
SEK,0.12\
USD,1.0",USE_FIELD_DELIMITERS_FOR_TITLE=true,FIRST_LINE_IS_TITLE=true)
NODE_14_BIND_SECURITY = LOCAL:: 0
NODE_14_EP_PARAMETERS_FLAG = -2
NODE_14_NAME = xrates
NODE_14_X = 1842.333
NODE_14_Y = 1305
NODE_15 = PASSTHROUGH
NODE_15_EP_PARAMETERS_FLAG = -2
NODE_15_NAME = ord_state
NODE_15_SOURCE =  NODE_9
NODE_15_X = 1213
NODE_15_Y = 1305
NODE_4 = READ_SNAPSHOT(SNAPSHOT_NAME=ORDERS,ALLOW_SNAPSHOT_ABSENCE=true)
NODE_42 = WHERE_CLAUSE(WHERE="DURATION >= 0")
NODE_42_EP_PARAMETERS_FLAG = -2
NODE_42_SOURCE =  NODE_4
NODE_42_X = 1213
NODE_42_Y = 439.666
NODE_45 = PER_TICK_SCRIPT(SCRIPT="long ORD_COUNT = 1;\
double ORDER_VALUE_USD  = ORD_SIZE *EBBO_MID*CCYMULTIPLIER  * USD_XRATE;\
double CUM_VALUE_USD  = CUM_VALUE*CCYMULTIPLIER * USD_XRATE;\
double LEAVES_VALUE_USD  = MAX(0,LEAVES_SIZE*EBBO_MID*CCYMULTIPLIER* USD_XRATE);\
double CUM_PRICE_IMPROVED_VALUE_USD = CUM_PRICE_IMPROVED_VALUE*CCYMULTIPLIER * USD_XRATE;\
double PCNT_FILLED = 0.0;\
long AGE = DATEDIFF(\"SECOND\",TICK_TIME,NOW());\
string AGECAT = \"\";\
string ORD_STATUS_GROUP = \"OPEN\";\
\
AGECAT = TOSTRING(FLOOR(AGE/10));\
\
if (ORD_SIZE>0) {\
	PCNT_FILLED = MIN(1,CUM_SIZE / ORD_SIZE);\
}\
\
if (ORDSTATUS = \"CANCEL\" || CUM_SIZE >= ORD_SIZE) {\
	ORD_STATUS_GROUP = \"COMPLETE\";\
}\
\
if (ARRIVAL_TIME < TODAY()) {\
	ARRIVAL_TIME = COMPLETION_TIME;\
	DURATION = 0;\
DURATION_MILLIS = 0;\
\
}\
\
\
DURATION_MILLIS = MIN(10000,DURATION_MILLIS);")
NODE_45_EP_PARAMETERS_FLAG = -2
NODE_45_SOURCE =  NODE_12
NODE_45_X = 1525
NODE_45_Y = 2090.333
NODE_4_EP_PARAMETERS_FLAG = -2
NODE_4_TICK_TYPE = S_ORDERS::SS
NODE_4_X = 1213
NODE_4_Y = 101
NODE_5 = ADD_FIELD(FIELD=SYM,VALUE=_SYMBOL_NAME)
NODE_5_EP_PARAMETERS_FLAG = -2
NODE_5_NAME = add_sym
NODE_5_SOURCE =  NODE_42..IF
NODE_5_X = 1213
NODE_5_Y = 811.666
NODE_9 = MERGE(IDENTIFY_INPUT_TS=false)
NODE_9_BIND_SECURITY = eval(THIS::primary_symlist) 0
NODE_9_EP_PARAMETERS_FLAG = -2
NODE_9_SOURCE =  NODE_5
NODE_9_X = 1213
NODE_9_Y = 1058.333
one_to_many_symbol_mapping = 0
QUERY_BATCH_SIZE = 0
ROOT = PASSTHROUGH
ROOT_EP_PARAMETERS_FLAG = -2
ROOT_NAME = output
ROOT_SOURCE =  NODE_45
ROOT_X = 1525
ROOT_Y = 2353
SHOW_TEMPLATE = 
TYPE = GRAPH

[_meta]
app_version = QueryDesigner Build timestamp: 20210528120000
ApplyTimesDaily = 0
end = 20210605000000000
execute_based_on_query_structure = 1
file_version = 2.0
RunningQuery = 0
start = 20210604000000000
SYMBOL_DATE = 
TZ = UTC
USER_NAME = build
version_history = start_expression 2.0 end_expression 2.0 START 2.0 END 2.0 RunningQuery 2.0
